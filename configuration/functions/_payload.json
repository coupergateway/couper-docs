[{"data":1,"prerenderedAt":1412},["Reactive",2],{"content-query-xjnRPffG0K":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"indexTable":10,"body":11,"_type":1407,"_id":1408,"_source":1409,"_file":1410,"_extension":1411},"/configuration/functions","configuration",false,"","Functions","Overview of usable function expressions",true,{"type":12,"children":13,"toc":1404},"root",[14,22,37,39],{"type":15,"tag":16,"props":17,"children":19},"element","h1",{"id":18},"functions",[20],{"type":21,"value":8},"text",{"type":15,"tag":23,"props":24,"children":25},"p",{},[26,28,35],{"type":21,"value":27},"This functions can be used and combined as standalone call with all kind of hcl expressions. But some of them requires a ",{"type":15,"tag":29,"props":30,"children":32},"code",{"className":31},[],[33],{"type":21,"value":34},"definitions",{"type":21,"value":36}," reference.",{"type":21,"value":38},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":15,"tag":40,"props":41,"children":42},"table",{},[43,78],{"type":15,"tag":44,"props":45,"children":46},"thead",{},[47],{"type":15,"tag":48,"props":49,"children":50},"tr",{},[51,58,63,68,73],{"type":15,"tag":52,"props":53,"children":55},"th",{"align":54},"left",[56],{"type":21,"value":57},"Name",{"type":15,"tag":52,"props":59,"children":60},{"align":54},[61],{"type":21,"value":62},"Type",{"type":15,"tag":52,"props":64,"children":65},{"align":54},[66],{"type":21,"value":67},"Description",{"type":15,"tag":52,"props":69,"children":70},{"align":54},[71],{"type":21,"value":72},"Arguments",{"type":15,"tag":52,"props":74,"children":75},{"align":54},[76],{"type":21,"value":77},"Example",{"type":15,"tag":79,"props":80,"children":81},"tbody",{},[82,125,165,207,256,296,345,385,425,498,539,589,642,706,760,801,901,955,997,1044,1120,1159,1215,1254,1293,1326,1365],{"type":15,"tag":48,"props":83,"children":84},{},[85,95,100,105,116],{"type":15,"tag":86,"props":87,"children":88},"td",{"align":54},[89],{"type":15,"tag":29,"props":90,"children":92},{"className":91},[],[93],{"type":21,"value":94},"base64_decode",{"type":15,"tag":86,"props":96,"children":97},{"align":54},[98],{"type":21,"value":99},"string",{"type":15,"tag":86,"props":101,"children":102},{"align":54},[103],{"type":21,"value":104},"Decodes Base64 data, as specified in RFC 4648.",{"type":15,"tag":86,"props":106,"children":107},{"align":54},[108,114],{"type":15,"tag":29,"props":109,"children":111},{"className":110},[],[112],{"type":21,"value":113},"encoded",{"type":21,"value":115}," (string)",{"type":15,"tag":86,"props":117,"children":118},{"align":54},[119],{"type":15,"tag":29,"props":120,"children":122},{"className":121},[],[123],{"type":21,"value":124},"base64_decode(\"Zm9v\")",{"type":15,"tag":48,"props":126,"children":127},{},[128,137,141,146,156],{"type":15,"tag":86,"props":129,"children":130},{"align":54},[131],{"type":15,"tag":29,"props":132,"children":134},{"className":133},[],[135],{"type":21,"value":136},"base64_encode",{"type":15,"tag":86,"props":138,"children":139},{"align":54},[140],{"type":21,"value":99},{"type":15,"tag":86,"props":142,"children":143},{"align":54},[144],{"type":21,"value":145},"Encodes Base64 data, as specified in RFC 4648.",{"type":15,"tag":86,"props":147,"children":148},{"align":54},[149,155],{"type":15,"tag":29,"props":150,"children":152},{"className":151},[],[153],{"type":21,"value":154},"decoded",{"type":21,"value":115},{"type":15,"tag":86,"props":157,"children":158},{"align":54},[159],{"type":15,"tag":29,"props":160,"children":162},{"className":161},[],[163],{"type":21,"value":164},"base64_encode(\"foo\")",{"type":15,"tag":48,"props":166,"children":167},{},[168,177,182,187,198],{"type":15,"tag":86,"props":169,"children":170},{"align":54},[171],{"type":15,"tag":29,"props":172,"children":174},{"className":173},[],[175],{"type":21,"value":176},"can",{"type":15,"tag":86,"props":178,"children":179},{"align":54},[180],{"type":21,"value":181},"bool",{"type":15,"tag":86,"props":183,"children":184},{"align":54},[185],{"type":21,"value":186},"Tries to evaluate the expression given in its first argument.",{"type":15,"tag":86,"props":188,"children":189},{"align":54},[190,196],{"type":15,"tag":29,"props":191,"children":193},{"className":192},[],[194],{"type":21,"value":195},"expression",{"type":21,"value":197}," (expression)",{"type":15,"tag":86,"props":199,"children":200},{"align":54},[201],{"type":15,"tag":29,"props":202,"children":204},{"className":203},[],[205],{"type":21,"value":206},"{ for k in [\"not_there\", \"method\", \"path\"] : k => request[k] if can(request[k]) }",{"type":15,"tag":48,"props":208,"children":209},{},[210,219,223,228,247],{"type":15,"tag":86,"props":211,"children":212},{"align":54},[213],{"type":15,"tag":29,"props":214,"children":216},{"className":215},[],[217],{"type":21,"value":218},"contains",{"type":15,"tag":86,"props":220,"children":221},{"align":54},[222],{"type":21,"value":181},{"type":15,"tag":86,"props":224,"children":225},{"align":54},[226],{"type":21,"value":227},"Determines whether a given list contains a given single value as one of its elements.",{"type":15,"tag":86,"props":229,"children":230},{"align":54},[231,237,239,245],{"type":15,"tag":29,"props":232,"children":234},{"className":233},[],[235],{"type":21,"value":236},"list",{"type":21,"value":238}," (tuple or list), ",{"type":15,"tag":29,"props":240,"children":242},{"className":241},[],[243],{"type":21,"value":244},"value",{"type":21,"value":246}," (various)",{"type":15,"tag":86,"props":248,"children":249},{"align":54},[250],{"type":15,"tag":29,"props":251,"children":253},{"className":252},[],[254],{"type":21,"value":255},"contains([1,2,3], 2)",{"type":15,"tag":48,"props":257,"children":258},{},[259,268,272,277,287],{"type":15,"tag":86,"props":260,"children":261},{"align":54},[262],{"type":15,"tag":29,"props":263,"children":265},{"className":264},[],[266],{"type":21,"value":267},"default",{"type":15,"tag":86,"props":269,"children":270},{"align":54},[271],{"type":21,"value":99},{"type":15,"tag":86,"props":273,"children":274},{"align":54},[275],{"type":21,"value":276},"Returns the first of the given arguments that is not null or an empty string. If no argument matches, the last argument is returned.",{"type":15,"tag":86,"props":278,"children":279},{"align":54},[280,286],{"type":15,"tag":29,"props":281,"children":283},{"className":282},[],[284],{"type":21,"value":285},"arg...",{"type":21,"value":246},{"type":15,"tag":86,"props":288,"children":289},{"align":54},[290],{"type":15,"tag":29,"props":291,"children":293},{"className":292},[],[294],{"type":21,"value":295},"default(request.cookies.foo, \"bar\")",{"type":15,"tag":48,"props":297,"children":298},{},[299,308,312,317,336],{"type":15,"tag":86,"props":300,"children":301},{"align":54},[302],{"type":15,"tag":29,"props":303,"children":305},{"className":304},[],[306],{"type":21,"value":307},"join",{"type":15,"tag":86,"props":309,"children":310},{"align":54},[311],{"type":21,"value":99},{"type":15,"tag":86,"props":313,"children":314},{"align":54},[315],{"type":21,"value":316},"Concatenates together the string elements of one or more lists with a given separator.",{"type":15,"tag":86,"props":318,"children":319},{"align":54},[320,326,328,334],{"type":15,"tag":29,"props":321,"children":323},{"className":322},[],[324],{"type":21,"value":325},"sep",{"type":21,"value":327}," (string), ",{"type":15,"tag":29,"props":329,"children":331},{"className":330},[],[332],{"type":21,"value":333},"lists...",{"type":21,"value":335}," (tuples or lists)",{"type":15,"tag":86,"props":337,"children":338},{"align":54},[339],{"type":15,"tag":29,"props":340,"children":342},{"className":341},[],[343],{"type":21,"value":344},"join(\"-\", [0,1,2,3])",{"type":15,"tag":48,"props":346,"children":347},{},[348,357,362,367,376],{"type":15,"tag":86,"props":349,"children":350},{"align":54},[351],{"type":15,"tag":29,"props":352,"children":354},{"className":353},[],[355],{"type":21,"value":356},"json_decode",{"type":15,"tag":86,"props":358,"children":359},{"align":54},[360],{"type":21,"value":361},"various",{"type":15,"tag":86,"props":363,"children":364},{"align":54},[365],{"type":21,"value":366},"Parses the given JSON string and, if it is valid, returns the value it represents.",{"type":15,"tag":86,"props":368,"children":369},{"align":54},[370,375],{"type":15,"tag":29,"props":371,"children":373},{"className":372},[],[374],{"type":21,"value":113},{"type":21,"value":115},{"type":15,"tag":86,"props":377,"children":378},{"align":54},[379],{"type":15,"tag":29,"props":380,"children":382},{"className":381},[],[383],{"type":21,"value":384},"json_decode(\"{\\\"foo\\\": 1}\")",{"type":15,"tag":48,"props":386,"children":387},{},[388,397,401,406,416],{"type":15,"tag":86,"props":389,"children":390},{"align":54},[391],{"type":15,"tag":29,"props":392,"children":394},{"className":393},[],[395],{"type":21,"value":396},"json_encode",{"type":15,"tag":86,"props":398,"children":399},{"align":54},[400],{"type":21,"value":99},{"type":15,"tag":86,"props":402,"children":403},{"align":54},[404],{"type":21,"value":405},"Returns a JSON serialization of the given value.",{"type":15,"tag":86,"props":407,"children":408},{"align":54},[409,415],{"type":15,"tag":29,"props":410,"children":412},{"className":411},[],[413],{"type":21,"value":414},"val",{"type":21,"value":246},{"type":15,"tag":86,"props":417,"children":418},{"align":54},[419],{"type":15,"tag":29,"props":420,"children":422},{"className":421},[],[423],{"type":21,"value":424},"json_encode(request.context.myJWT)",{"type":15,"tag":48,"props":426,"children":427},{},[428,437,441,471,489],{"type":15,"tag":86,"props":429,"children":430},{"align":54},[431],{"type":15,"tag":29,"props":432,"children":434},{"className":433},[],[435],{"type":21,"value":436},"jwt_sign",{"type":15,"tag":86,"props":438,"children":439},{"align":54},[440],{"type":21,"value":99},{"type":15,"tag":86,"props":442,"children":443},{"align":54},[444,446,453,455,461,463,469],{"type":21,"value":445},"Creates and signs a JSON Web Token (JWT) from information from a referenced ",{"type":15,"tag":447,"props":448,"children":450},"a",{"href":449},"/configuration/block/jwt_signing_profile",[451],{"type":21,"value":452},"JWT Signing Profile Block",{"type":21,"value":454}," (or ",{"type":15,"tag":447,"props":456,"children":458},{"href":457},"/configuration/block/jwt",[459],{"type":21,"value":460},"JWT Block",{"type":21,"value":462}," with ",{"type":15,"tag":29,"props":464,"children":466},{"className":465},[],[467],{"type":21,"value":468},"signing_ttl",{"type":21,"value":470},") and additional claims provided as a function parameter.",{"type":15,"tag":86,"props":472,"children":473},{"align":54},[474,480,481,487],{"type":15,"tag":29,"props":475,"children":477},{"className":476},[],[478],{"type":21,"value":479},"label",{"type":21,"value":327},{"type":15,"tag":29,"props":482,"children":484},{"className":483},[],[485],{"type":21,"value":486},"claims",{"type":21,"value":488}," (object)",{"type":15,"tag":86,"props":490,"children":491},{"align":54},[492],{"type":15,"tag":29,"props":493,"children":495},{"className":494},[],[496],{"type":21,"value":497},"jwt_sign(\"myJWT\")",{"type":15,"tag":48,"props":499,"children":500},{},[501,510,514,519,530],{"type":15,"tag":86,"props":502,"children":503},{"align":54},[504],{"type":15,"tag":29,"props":505,"children":507},{"className":506},[],[508],{"type":21,"value":509},"keys",{"type":15,"tag":86,"props":511,"children":512},{"align":54},[513],{"type":21,"value":236},{"type":15,"tag":86,"props":515,"children":516},{"align":54},[517],{"type":21,"value":518},"Takes a map and returns a sorted list of the map keys.",{"type":15,"tag":86,"props":520,"children":521},{"align":54},[522,528],{"type":15,"tag":29,"props":523,"children":525},{"className":524},[],[526],{"type":21,"value":527},"inputMap",{"type":21,"value":529}," (object or map)",{"type":15,"tag":86,"props":531,"children":532},{"align":54},[533],{"type":15,"tag":29,"props":534,"children":536},{"className":535},[],[537],{"type":21,"value":538},"keys(request.headers)",{"type":15,"tag":48,"props":540,"children":541},{},[542,551,556,561,580],{"type":15,"tag":86,"props":543,"children":544},{"align":54},[545],{"type":15,"tag":29,"props":546,"children":548},{"className":547},[],[549],{"type":21,"value":550},"length",{"type":15,"tag":86,"props":552,"children":553},{"align":54},[554],{"type":21,"value":555},"integer",{"type":15,"tag":86,"props":557,"children":558},{"align":54},[559],{"type":21,"value":560},"Returns the number of elements in the given collection.",{"type":15,"tag":86,"props":562,"children":563},{"align":54},[564,570,572,578],{"type":15,"tag":29,"props":565,"children":567},{"className":566},[],[568],{"type":21,"value":569},"collection",{"type":21,"value":571}," (tuple, list or map; ",{"type":15,"tag":573,"props":574,"children":575},"strong",{},[576],{"type":21,"value":577},"no object",{"type":21,"value":579},")",{"type":15,"tag":86,"props":581,"children":582},{"align":54},[583],{"type":15,"tag":29,"props":584,"children":586},{"className":585},[],[587],{"type":21,"value":588},"length([0,1,2,3])",{"type":15,"tag":48,"props":590,"children":591},{},[592,601,605,610,633],{"type":15,"tag":86,"props":593,"children":594},{"align":54},[595],{"type":15,"tag":29,"props":596,"children":598},{"className":597},[],[599],{"type":21,"value":600},"lookup",{"type":15,"tag":86,"props":602,"children":603},{"align":54},[604],{"type":21,"value":361},{"type":15,"tag":86,"props":606,"children":607},{"align":54},[608],{"type":21,"value":609},"Performs a dynamic lookup into a map. The default (third argument) is returned if the key (second argument) is not found in the inputMap (first argument).",{"type":15,"tag":86,"props":611,"children":612},{"align":54},[613,618,620,626,627,632],{"type":15,"tag":29,"props":614,"children":616},{"className":615},[],[617],{"type":21,"value":527},{"type":21,"value":619}," (object or map), ",{"type":15,"tag":29,"props":621,"children":623},{"className":622},[],[624],{"type":21,"value":625},"key",{"type":21,"value":327},{"type":15,"tag":29,"props":628,"children":630},{"className":629},[],[631],{"type":21,"value":267},{"type":21,"value":246},{"type":15,"tag":86,"props":634,"children":635},{"align":54},[636],{"type":15,"tag":29,"props":637,"children":639},{"className":638},[],[640],{"type":21,"value":641},"lookup({a = 1}, \"b\", \"def\")",{"type":15,"tag":48,"props":643,"children":644},{},[645,654,659,687,697],{"type":15,"tag":86,"props":646,"children":647},{"align":54},[648],{"type":15,"tag":29,"props":649,"children":651},{"className":650},[],[652],{"type":21,"value":653},"merge",{"type":15,"tag":86,"props":655,"children":656},{"align":54},[657],{"type":21,"value":658},"object or tuple",{"type":15,"tag":86,"props":660,"children":661},{"align":54},[662,664,670,672,678,680,685],{"type":21,"value":663},"Deep-merges two or more of either objects or tuples. ",{"type":15,"tag":29,"props":665,"children":667},{"className":666},[],[668],{"type":21,"value":669},"null",{"type":21,"value":671}," arguments are ignored. An attribute value with a different type than the current value is set as the new value. ",{"type":15,"tag":29,"props":673,"children":675},{"className":674},[],[676],{"type":21,"value":677},"merge()",{"type":21,"value":679}," with no parameters returns ",{"type":15,"tag":29,"props":681,"children":683},{"className":682},[],[684],{"type":21,"value":669},{"type":21,"value":686},".",{"type":15,"tag":86,"props":688,"children":689},{"align":54},[690,695],{"type":15,"tag":29,"props":691,"children":693},{"className":692},[],[694],{"type":21,"value":285},{"type":21,"value":696}," (object or tuple)",{"type":15,"tag":86,"props":698,"children":699},{"align":54},[700],{"type":15,"tag":29,"props":701,"children":703},{"className":702},[],[704],{"type":21,"value":705},"merge(request.headers, { x-additional = \"myval\" })",{"type":15,"tag":48,"props":707,"children":708},{},[709,718,722,742,751],{"type":15,"tag":86,"props":710,"children":711},{"align":54},[712],{"type":15,"tag":29,"props":713,"children":715},{"className":714},[],[716],{"type":21,"value":717},"oauth2_authorization_url",{"type":15,"tag":86,"props":719,"children":720},{"align":54},[721],{"type":21,"value":99},{"type":15,"tag":86,"props":723,"children":724},{"align":54},[725,727,733,735,741],{"type":21,"value":726},"Creates an OAuth2 authorization URL from a referenced ",{"type":15,"tag":447,"props":728,"children":730},{"href":729},"/configuration/block/beta_oauth2",[731],{"type":21,"value":732},"OAuth2 AC (Beta) Block",{"type":21,"value":734}," or ",{"type":15,"tag":447,"props":736,"children":738},{"href":737},"/configuration/block/oidc",[739],{"type":21,"value":740},"OIDC Block",{"type":21,"value":686},{"type":15,"tag":86,"props":743,"children":744},{"align":54},[745,750],{"type":15,"tag":29,"props":746,"children":748},{"className":747},[],[749],{"type":21,"value":479},{"type":21,"value":115},{"type":15,"tag":86,"props":752,"children":753},{"align":54},[754],{"type":15,"tag":29,"props":755,"children":757},{"className":756},[],[758],{"type":21,"value":759},"oauth2_authorization_url(\"myOAuth2\")",{"type":15,"tag":48,"props":761,"children":762},{},[763,772,776,789,792],{"type":15,"tag":86,"props":764,"children":765},{"align":54},[766],{"type":15,"tag":29,"props":767,"children":769},{"className":768},[],[770],{"type":21,"value":771},"oauth2_verifier",{"type":15,"tag":86,"props":773,"children":774},{"align":54},[775],{"type":21,"value":99},{"type":15,"tag":86,"props":777,"children":778},{"align":54},[779,781,787],{"type":21,"value":780},"Creates a cryptographically random key as specified in RFC 7636, applicable for all verifier methods; e.g. to be set as a cookie and read into ",{"type":15,"tag":29,"props":782,"children":784},{"className":783},[],[785],{"type":21,"value":786},"verifier_value",{"type":21,"value":788},". Multiple calls of this function in the same client request context return the same value.",{"type":15,"tag":86,"props":790,"children":791},{"align":54},[],{"type":15,"tag":86,"props":793,"children":794},{"align":54},[795],{"type":15,"tag":29,"props":796,"children":798},{"className":797},[],[799],{"type":21,"value":800},"oauth2_verifier()",{"type":15,"tag":48,"props":802,"children":803},{},[804,813,817,883,892],{"type":15,"tag":86,"props":805,"children":806},{"align":54},[807],{"type":15,"tag":29,"props":808,"children":810},{"className":809},[],[811],{"type":21,"value":812},"relative_url",{"type":15,"tag":86,"props":814,"children":815},{"align":54},[816],{"type":21,"value":99},{"type":15,"tag":86,"props":818,"children":819},{"align":54},[820,822,828,830,836,838,844,846,852,854,860,861,867,868,874,875,881],{"type":21,"value":821},"Returns a relative URL by retaining ",{"type":15,"tag":29,"props":823,"children":825},{"className":824},[],[826],{"type":21,"value":827},"path",{"type":21,"value":829},", ",{"type":15,"tag":29,"props":831,"children":833},{"className":832},[],[834],{"type":21,"value":835},"query",{"type":21,"value":837}," and ",{"type":15,"tag":29,"props":839,"children":841},{"className":840},[],[842],{"type":21,"value":843},"fragment",{"type":21,"value":845}," components.  The input URL ",{"type":15,"tag":29,"props":847,"children":849},{"className":848},[],[850],{"type":21,"value":851},"s",{"type":21,"value":853}," must begin with ",{"type":15,"tag":29,"props":855,"children":857},{"className":856},[],[858],{"type":21,"value":859},"/\u003Cpath>",{"type":21,"value":829},{"type":15,"tag":29,"props":862,"children":864},{"className":863},[],[865],{"type":21,"value":866},"//\u003Cauthority>",{"type":21,"value":829},{"type":15,"tag":29,"props":869,"children":871},{"className":870},[],[872],{"type":21,"value":873},"http://",{"type":21,"value":734},{"type":15,"tag":29,"props":876,"children":878},{"className":877},[],[879],{"type":21,"value":880},"https://",{"type":21,"value":882},", otherwise an error is thrown.",{"type":15,"tag":86,"props":884,"children":885},{"align":54},[886,891],{"type":15,"tag":29,"props":887,"children":889},{"className":888},[],[890],{"type":21,"value":851},{"type":21,"value":115},{"type":15,"tag":86,"props":893,"children":894},{"align":54},[895],{"type":15,"tag":29,"props":896,"children":898},{"className":897},[],[899],{"type":21,"value":900},"relative_url(\"https://httpbin.org/anything?query#fragment\") // returns \"/anything?query#fragment\"",{"type":15,"tag":48,"props":902,"children":903},{},[904,913,917,937,946],{"type":15,"tag":86,"props":905,"children":906},{"align":54},[907],{"type":15,"tag":29,"props":908,"children":910},{"className":909},[],[911],{"type":21,"value":912},"saml_sso_url",{"type":15,"tag":86,"props":914,"children":915},{"align":54},[916],{"type":21,"value":99},{"type":15,"tag":86,"props":918,"children":919},{"align":54},[920,922,928,930,936],{"type":21,"value":921},"Creates a SAML SingleSignOn URL (including the ",{"type":15,"tag":29,"props":923,"children":925},{"className":924},[],[926],{"type":21,"value":927},"SAMLRequest",{"type":21,"value":929}," parameter) from a referenced ",{"type":15,"tag":447,"props":931,"children":933},{"href":932},"/configuration/block/saml",[934],{"type":21,"value":935},"SAML Block",{"type":21,"value":686},{"type":15,"tag":86,"props":938,"children":939},{"align":54},[940,945],{"type":15,"tag":29,"props":941,"children":943},{"className":942},[],[944],{"type":21,"value":479},{"type":21,"value":115},{"type":15,"tag":86,"props":947,"children":948},{"align":54},[949],{"type":15,"tag":29,"props":950,"children":952},{"className":951},[],[953],{"type":21,"value":954},"saml_sso_url(\"mySAML\")",{"type":15,"tag":48,"props":956,"children":957},{},[958,967,972,977,988],{"type":15,"tag":86,"props":959,"children":960},{"align":54},[961],{"type":15,"tag":29,"props":962,"children":964},{"className":963},[],[965],{"type":21,"value":966},"set_intersection",{"type":15,"tag":86,"props":968,"children":969},{"align":54},[970],{"type":21,"value":971},"list or tuple",{"type":15,"tag":86,"props":973,"children":974},{"align":54},[975],{"type":21,"value":976},"Returns a new set containing the elements that exist in all of the given sets.",{"type":15,"tag":86,"props":978,"children":979},{"align":54},[980,986],{"type":15,"tag":29,"props":981,"children":983},{"className":982},[],[984],{"type":21,"value":985},"sets...",{"type":21,"value":987}," (tuple or list)",{"type":15,"tag":86,"props":989,"children":990},{"align":54},[991],{"type":15,"tag":29,"props":992,"children":994},{"className":993},[],[995],{"type":21,"value":996},"set_intersection([\"A\", \"B\", \"C\"], [\"B\", D\"])",{"type":15,"tag":48,"props":998,"children":999},{},[1000,1009,1014,1019,1035],{"type":15,"tag":86,"props":1001,"children":1002},{"align":54},[1003],{"type":15,"tag":29,"props":1004,"children":1006},{"className":1005},[],[1007],{"type":21,"value":1008},"split",{"type":15,"tag":86,"props":1010,"children":1011},{"align":54},[1012],{"type":21,"value":1013},"tuple",{"type":15,"tag":86,"props":1015,"children":1016},{"align":54},[1017],{"type":21,"value":1018},"Divides a given string by a given separator, returning a list of strings containing the characters between the separator sequences.",{"type":15,"tag":86,"props":1020,"children":1021},{"align":54},[1022,1027,1028,1034],{"type":15,"tag":29,"props":1023,"children":1025},{"className":1024},[],[1026],{"type":21,"value":325},{"type":21,"value":327},{"type":15,"tag":29,"props":1029,"children":1031},{"className":1030},[],[1032],{"type":21,"value":1033},"str",{"type":21,"value":115},{"type":15,"tag":86,"props":1036,"children":1037},{"align":54},[1038],{"type":15,"tag":29,"props":1039,"children":1041},{"className":1040},[],[1042],{"type":21,"value":1043},"split(\" \", \"foo bar qux\")",{"type":15,"tag":48,"props":1045,"children":1046},{},[1047,1056,1060,1088,1111],{"type":15,"tag":86,"props":1048,"children":1049},{"align":54},[1050],{"type":15,"tag":29,"props":1051,"children":1053},{"className":1052},[],[1054],{"type":21,"value":1055},"substr",{"type":15,"tag":86,"props":1057,"children":1058},{"align":54},[1059],{"type":21,"value":99},{"type":15,"tag":86,"props":1061,"children":1062},{"align":54},[1063,1065,1071,1073,1078,1080,1086],{"type":21,"value":1064},"Extracts a sequence of characters from another string and creates a new string. The \"",{"type":15,"tag":29,"props":1066,"children":1068},{"className":1067},[],[1069],{"type":21,"value":1070},"offset",{"type":21,"value":1072},"\" index may be negative, in which case it is relative to the end of the given string. The \"",{"type":15,"tag":29,"props":1074,"children":1076},{"className":1075},[],[1077],{"type":21,"value":550},{"type":21,"value":1079},"\" may be ",{"type":15,"tag":29,"props":1081,"children":1083},{"className":1082},[],[1084],{"type":21,"value":1085},"-1",{"type":21,"value":1087},", in which case the remainder of the string after the given offset will be returned.",{"type":15,"tag":86,"props":1089,"children":1090},{"align":54},[1091,1096,1097,1102,1104,1109],{"type":15,"tag":29,"props":1092,"children":1094},{"className":1093},[],[1095],{"type":21,"value":1033},{"type":21,"value":327},{"type":15,"tag":29,"props":1098,"children":1100},{"className":1099},[],[1101],{"type":21,"value":1070},{"type":21,"value":1103}," (integer), ",{"type":15,"tag":29,"props":1105,"children":1107},{"className":1106},[],[1108],{"type":21,"value":550},{"type":21,"value":1110}," (integer)",{"type":15,"tag":86,"props":1112,"children":1113},{"align":54},[1114],{"type":15,"tag":29,"props":1115,"children":1117},{"className":1116},[],[1118],{"type":21,"value":1119},"substr(\"abcdef\", 3, -1)",{"type":15,"tag":48,"props":1121,"children":1122},{},[1123,1132,1136,1141,1150],{"type":15,"tag":86,"props":1124,"children":1125},{"align":54},[1126],{"type":15,"tag":29,"props":1127,"children":1129},{"className":1128},[],[1130],{"type":21,"value":1131},"to_lower",{"type":15,"tag":86,"props":1133,"children":1134},{"align":54},[1135],{"type":21,"value":99},{"type":15,"tag":86,"props":1137,"children":1138},{"align":54},[1139],{"type":21,"value":1140},"Converts a given string to lowercase.",{"type":15,"tag":86,"props":1142,"children":1143},{"align":54},[1144,1149],{"type":15,"tag":29,"props":1145,"children":1147},{"className":1146},[],[1148],{"type":21,"value":851},{"type":21,"value":115},{"type":15,"tag":86,"props":1151,"children":1152},{"align":54},[1153],{"type":15,"tag":29,"props":1154,"children":1156},{"className":1155},[],[1157],{"type":21,"value":1158},"to_lower(request.cookies.name)",{"type":15,"tag":48,"props":1160,"children":1161},{},[1162,1171,1176,1188,1199],{"type":15,"tag":86,"props":1163,"children":1164},{"align":54},[1165],{"type":15,"tag":29,"props":1166,"children":1168},{"className":1167},[],[1169],{"type":21,"value":1170},"to_number",{"type":15,"tag":86,"props":1172,"children":1173},{"align":54},[1174],{"type":21,"value":1175},"number",{"type":15,"tag":86,"props":1177,"children":1178},{"align":54},[1179,1181,1186],{"type":21,"value":1180},"Converts its argument to a number value. Only numbers, ",{"type":15,"tag":29,"props":1182,"children":1184},{"className":1183},[],[1185],{"type":21,"value":669},{"type":21,"value":1187},", and strings containing decimal representations of numbers can be converted to number. All other values will produce an error.",{"type":15,"tag":86,"props":1189,"children":1190},{"align":54},[1191,1197],{"type":15,"tag":29,"props":1192,"children":1194},{"className":1193},[],[1195],{"type":21,"value":1196},"num",{"type":21,"value":1198}," (string or number)",{"type":15,"tag":86,"props":1200,"children":1201},{"align":54},[1202,1208,1209],{"type":15,"tag":29,"props":1203,"children":1205},{"className":1204},[],[1206],{"type":21,"value":1207},"to_number(\"1,23\")",{"type":21,"value":829},{"type":15,"tag":29,"props":1210,"children":1212},{"className":1211},[],[1213],{"type":21,"value":1214},"to_number(env.PI)",{"type":15,"tag":48,"props":1216,"children":1217},{},[1218,1227,1231,1236,1245],{"type":15,"tag":86,"props":1219,"children":1220},{"align":54},[1221],{"type":15,"tag":29,"props":1222,"children":1224},{"className":1223},[],[1225],{"type":21,"value":1226},"to_upper",{"type":15,"tag":86,"props":1228,"children":1229},{"align":54},[1230],{"type":21,"value":99},{"type":15,"tag":86,"props":1232,"children":1233},{"align":54},[1234],{"type":21,"value":1235},"Converts a given string to uppercase.",{"type":15,"tag":86,"props":1237,"children":1238},{"align":54},[1239,1244],{"type":15,"tag":29,"props":1240,"children":1242},{"className":1241},[],[1243],{"type":21,"value":851},{"type":21,"value":115},{"type":15,"tag":86,"props":1246,"children":1247},{"align":54},[1248],{"type":15,"tag":29,"props":1249,"children":1251},{"className":1250},[],[1252],{"type":21,"value":1253},"to_upper(\"CamelCase\")",{"type":15,"tag":48,"props":1255,"children":1256},{},[1257,1266,1270,1275,1284],{"type":15,"tag":86,"props":1258,"children":1259},{"align":54},[1260],{"type":15,"tag":29,"props":1261,"children":1263},{"className":1262},[],[1264],{"type":21,"value":1265},"trim",{"type":15,"tag":86,"props":1267,"children":1268},{"align":54},[1269],{"type":21,"value":99},{"type":15,"tag":86,"props":1271,"children":1272},{"align":54},[1273],{"type":21,"value":1274},"Removes any whitespace characters from the start and end of the given string.",{"type":15,"tag":86,"props":1276,"children":1277},{"align":54},[1278,1283],{"type":15,"tag":29,"props":1279,"children":1281},{"className":1280},[],[1282],{"type":21,"value":1033},{"type":21,"value":115},{"type":15,"tag":86,"props":1285,"children":1286},{"align":54},[1287],{"type":15,"tag":29,"props":1288,"children":1290},{"className":1289},[],[1291],{"type":21,"value":1292},"trim(\" foo \")",{"type":15,"tag":48,"props":1294,"children":1295},{},[1296,1305,1309,1314,1317],{"type":15,"tag":86,"props":1297,"children":1298},{"align":54},[1299],{"type":15,"tag":29,"props":1300,"children":1302},{"className":1301},[],[1303],{"type":21,"value":1304},"unixtime",{"type":15,"tag":86,"props":1306,"children":1307},{"align":54},[1308],{"type":21,"value":555},{"type":15,"tag":86,"props":1310,"children":1311},{"align":54},[1312],{"type":21,"value":1313},"Retrieves the current UNIX timestamp in seconds.",{"type":15,"tag":86,"props":1315,"children":1316},{"align":54},[],{"type":15,"tag":86,"props":1318,"children":1319},{"align":54},[1320],{"type":15,"tag":29,"props":1321,"children":1323},{"className":1322},[],[1324],{"type":21,"value":1325},"unixtime()",{"type":15,"tag":48,"props":1327,"children":1328},{},[1329,1338,1342,1347,1356],{"type":15,"tag":86,"props":1330,"children":1331},{"align":54},[1332],{"type":15,"tag":29,"props":1333,"children":1335},{"className":1334},[],[1336],{"type":21,"value":1337},"url_decode",{"type":15,"tag":86,"props":1339,"children":1340},{"align":54},[1341],{"type":21,"value":99},{"type":15,"tag":86,"props":1343,"children":1344},{"align":54},[1345],{"type":21,"value":1346},"URL-decodes a given string according to RFC 3986.",{"type":15,"tag":86,"props":1348,"children":1349},{"align":54},[1350,1355],{"type":15,"tag":29,"props":1351,"children":1353},{"className":1352},[],[1354],{"type":21,"value":851},{"type":21,"value":115},{"type":15,"tag":86,"props":1357,"children":1358},{"align":54},[1359],{"type":15,"tag":29,"props":1360,"children":1362},{"className":1361},[],[1363],{"type":21,"value":1364},"url_decode(\"abc%25%26%2C123\")",{"type":15,"tag":48,"props":1366,"children":1367},{},[1368,1377,1381,1386,1395],{"type":15,"tag":86,"props":1369,"children":1370},{"align":54},[1371],{"type":15,"tag":29,"props":1372,"children":1374},{"className":1373},[],[1375],{"type":21,"value":1376},"url_encode",{"type":15,"tag":86,"props":1378,"children":1379},{"align":54},[1380],{"type":21,"value":99},{"type":15,"tag":86,"props":1382,"children":1383},{"align":54},[1384],{"type":21,"value":1385},"URL-encodes a given string according to RFC 3986.",{"type":15,"tag":86,"props":1387,"children":1388},{"align":54},[1389,1394],{"type":15,"tag":29,"props":1390,"children":1392},{"className":1391},[],[1393],{"type":21,"value":851},{"type":21,"value":115},{"type":15,"tag":86,"props":1396,"children":1397},{"align":54},[1398],{"type":15,"tag":29,"props":1399,"children":1401},{"className":1400},[],[1402],{"type":21,"value":1403},"url_encode(\"abc%&,123\")",{"title":7,"searchDepth":1405,"depth":1405,"links":1406},2,[],"markdown","content:2.configuration:6.functions.md","content","2.configuration/6.functions.md","md",1718902495184]