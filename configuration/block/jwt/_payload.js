export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY){return {data:{"content-query-jk1n0DRxlU":{_path:"\u002Fconfiguration\u002Fblock\u002Fjwt",_draft:v,_partial:v,_locale:"en",_empty:v,title:w,description:"The jwt block lets you configure JSON Web Token access control for your gateway.\nLike all access control types, the jwt block is defined in\nthe definitions Block and can be referenced in all configuration blocks by its\nrequired label.",excerpt:{type:x,children:[{type:b,tag:y,props:{id:f},children:[{type:a,value:w}]},{type:b,tag:e,props:{},children:[{type:a,value:k},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:z},{type:b,tag:g,props:{href:A},children:[{type:a,value:B}]},{type:a,value:C},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:D},{type:b,tag:g,props:{href:l},children:[{type:b,tag:c,props:{},children:[{type:a,value:E}]},{type:a,value:F}]},{type:a,value:G},{type:b,tag:H,props:{},children:[{type:a,value:I}]},{type:a,value:j}]},{type:b,tag:e,props:{},children:[{type:a,value:J},{type:b,tag:c,props:{},children:[{type:a,value:K}]},{type:a,value:L},{type:b,tag:c,props:{},children:[{type:a,value:M}]},{type:a,value:j}]},{type:b,tag:N,props:{},children:[{type:b,tag:O,props:{},children:[{type:b,tag:m,props:{},children:[{type:b,tag:h,props:{align:d},children:[{type:a,value:P}]},{type:b,tag:h,props:{align:d},children:[{type:a,value:Q}]},{type:b,tag:h,props:{align:d},children:[{type:a,value:R}]},{type:b,tag:h,props:{align:d},children:[{type:a,value:S}]}]}]},{type:b,tag:T,props:{},children:[{type:b,tag:m,props:{},children:[{type:b,tag:i,props:{align:d},children:[{type:b,tag:c,props:{},children:[{type:a,value:f}]}]},{type:b,tag:i,props:{align:d},children:[{type:b,tag:g,props:{href:l},children:[{type:a,value:U}]}]},{type:b,tag:i,props:{align:d},children:[{type:a,value:V}]},{type:b,tag:i,props:{align:d},children:[{type:b,tag:g,props:{href:W},children:[{type:a,value:X},{type:b,tag:c,props:{},children:[{type:a,value:Y}]}]},{type:a,value:n},{type:b,tag:g,props:{href:Z},children:[{type:a,value:_}]}]}]}]}]},{type:b,tag:$,props:{":values":aa},children:[]},{type:b,tag:e,props:{},children:[{type:a,value:ab},{type:b,tag:c,props:{},children:[{type:a,value:ac}]},{type:a,value:n},{type:b,tag:c,props:{},children:[{type:a,value:ad}]},{type:a,value:o},{type:b,tag:c,props:{},children:[{type:a,value:ae}]},{type:a,value:af},{type:b,tag:c,props:{},children:[{type:a,value:ag}]},{type:a,value:ah},{type:b,tag:c,props:{},children:[{type:a,value:ai}]},{type:a,value:p}]},{type:b,tag:e,props:{},children:[{type:a,value:aj},{type:b,tag:c,props:{},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:c,props:{},children:[{type:a,value:s}]},{type:a,value:ak},{type:b,tag:c,props:{},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:c,props:{},children:[{type:a,value:an}]},{type:a,value:ao},{type:b,tag:c,props:{},children:[{type:a,value:ap}]},{type:a,value:p}]},{type:b,tag:e,props:{},children:[{type:a,value:aq}]},{type:b,tag:ar,props:{},children:[{type:b,tag:t,props:{},children:[{type:a,value:as},{type:b,tag:c,props:{},children:[{type:a,value:at}]},{type:a,value:au}]},{type:b,tag:t,props:{},children:[{type:a,value:av},{type:b,tag:c,props:{},children:[{type:a,value:aw}]},{type:a,value:ax},{type:b,tag:c,props:{},children:[{type:a,value:ay}]},{type:a,value:j}]}]},{type:b,tag:e,props:{},children:[{type:a,value:k},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:az},{type:b,tag:g,props:{href:aA},children:[{type:b,tag:c,props:{},children:[{type:a,value:aB}]},{type:a,value:aC}]},{type:a,value:aD},{type:b,tag:c,props:{},children:[{type:a,value:u}]},{type:a,value:aE},{type:b,tag:c,props:{},children:[{type:a,value:aF}]},{type:a,value:aG},{type:b,tag:c,props:{},children:[{type:a,value:q}]},{type:a,value:aH},{type:b,tag:c,props:{},children:[{type:a,value:s}]},{type:a,value:aI},{type:b,tag:c,props:{},children:[{type:a,value:aJ}]},{type:a,value:o},{type:b,tag:c,props:{},children:[{type:a,value:aK}]},{type:a,value:aL},{type:b,tag:c,props:{},children:[{type:a,value:aM}]},{type:a,value:r},{type:b,tag:c,props:{},children:[{type:a,value:aN}]},{type:a,value:aO}]},{type:b,tag:aP,props:{},children:[{type:b,tag:e,props:{},children:[{type:b,tag:aQ,props:{},children:[{type:a,value:aR}]},{type:a,value:aS},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:aT},{type:b,tag:c,props:{},children:[{type:a,value:u}]},{type:a,value:aU},{type:b,tag:c,props:{},children:[{type:a,value:aV}]},{type:a,value:aW}]}]},{type:b,tag:aX,props:{},children:[]}]},body:{type:x,children:[{type:b,tag:y,props:{id:f},children:[{type:a,value:w}]},{type:b,tag:e,props:{},children:[{type:a,value:k},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:z},{type:b,tag:g,props:{href:A},children:[{type:a,value:B}]},{type:a,value:C},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:D},{type:b,tag:g,props:{href:l},children:[{type:b,tag:c,props:{},children:[{type:a,value:E}]},{type:a,value:F}]},{type:a,value:G},{type:b,tag:H,props:{},children:[{type:a,value:I}]},{type:a,value:j}]},{type:b,tag:e,props:{},children:[{type:a,value:J},{type:b,tag:c,props:{},children:[{type:a,value:K}]},{type:a,value:L},{type:b,tag:c,props:{},children:[{type:a,value:M}]},{type:a,value:j}]},{type:b,tag:N,props:{},children:[{type:b,tag:O,props:{},children:[{type:b,tag:m,props:{},children:[{type:b,tag:h,props:{align:d},children:[{type:a,value:P}]},{type:b,tag:h,props:{align:d},children:[{type:a,value:Q}]},{type:b,tag:h,props:{align:d},children:[{type:a,value:R}]},{type:b,tag:h,props:{align:d},children:[{type:a,value:S}]}]}]},{type:b,tag:T,props:{},children:[{type:b,tag:m,props:{},children:[{type:b,tag:i,props:{align:d},children:[{type:b,tag:c,props:{},children:[{type:a,value:f}]}]},{type:b,tag:i,props:{align:d},children:[{type:b,tag:g,props:{href:l},children:[{type:a,value:U}]}]},{type:b,tag:i,props:{align:d},children:[{type:a,value:V}]},{type:b,tag:i,props:{align:d},children:[{type:b,tag:g,props:{href:W},children:[{type:a,value:X},{type:b,tag:c,props:{},children:[{type:a,value:Y}]}]},{type:a,value:n},{type:b,tag:g,props:{href:Z},children:[{type:a,value:_}]}]}]}]}]},{type:b,tag:$,props:{":values":aa},children:[]},{type:b,tag:e,props:{},children:[{type:a,value:ab},{type:b,tag:c,props:{},children:[{type:a,value:ac}]},{type:a,value:n},{type:b,tag:c,props:{},children:[{type:a,value:ad}]},{type:a,value:o},{type:b,tag:c,props:{},children:[{type:a,value:ae}]},{type:a,value:af},{type:b,tag:c,props:{},children:[{type:a,value:ag}]},{type:a,value:ah},{type:b,tag:c,props:{},children:[{type:a,value:ai}]},{type:a,value:p}]},{type:b,tag:e,props:{},children:[{type:a,value:aj},{type:b,tag:c,props:{},children:[{type:a,value:q}]},{type:a,value:r},{type:b,tag:c,props:{},children:[{type:a,value:s}]},{type:a,value:ak},{type:b,tag:c,props:{},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:c,props:{},children:[{type:a,value:an}]},{type:a,value:ao},{type:b,tag:c,props:{},children:[{type:a,value:ap}]},{type:a,value:p}]},{type:b,tag:e,props:{},children:[{type:a,value:aq}]},{type:b,tag:ar,props:{},children:[{type:b,tag:t,props:{},children:[{type:a,value:as},{type:b,tag:c,props:{},children:[{type:a,value:at}]},{type:a,value:au}]},{type:b,tag:t,props:{},children:[{type:a,value:av},{type:b,tag:c,props:{},children:[{type:a,value:aw}]},{type:a,value:ax},{type:b,tag:c,props:{},children:[{type:a,value:ay}]},{type:a,value:j}]}]},{type:b,tag:e,props:{},children:[{type:a,value:k},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:az},{type:b,tag:g,props:{href:aA},children:[{type:b,tag:c,props:{},children:[{type:a,value:aB}]},{type:a,value:aC}]},{type:a,value:aD},{type:b,tag:c,props:{},children:[{type:a,value:u}]},{type:a,value:aE},{type:b,tag:c,props:{},children:[{type:a,value:aF}]},{type:a,value:aG},{type:b,tag:c,props:{},children:[{type:a,value:q}]},{type:a,value:aH},{type:b,tag:c,props:{},children:[{type:a,value:s}]},{type:a,value:aI},{type:b,tag:c,props:{},children:[{type:a,value:aJ}]},{type:a,value:o},{type:b,tag:c,props:{},children:[{type:a,value:aK}]},{type:a,value:aL},{type:b,tag:c,props:{},children:[{type:a,value:aM}]},{type:a,value:r},{type:b,tag:c,props:{},children:[{type:a,value:aN}]},{type:a,value:aO}]},{type:b,tag:aP,props:{},children:[{type:b,tag:e,props:{},children:[{type:b,tag:aQ,props:{},children:[{type:a,value:aR}]},{type:a,value:aS},{type:b,tag:c,props:{},children:[{type:a,value:f}]},{type:a,value:aT},{type:b,tag:c,props:{},children:[{type:a,value:u}]},{type:a,value:aU},{type:b,tag:c,props:{},children:[{type:a,value:aV}]},{type:a,value:aW}]}]},{type:b,tag:aX,props:{},children:[]}],toc:{title:"",searchDepth:aY,depth:aY,links:[]}},_type:"markdown",_id:"content:2.configuration:4.block:jwt.md",_source:"content",_file:"2.configuration\u002F4.block\u002Fjwt.md",_extension:"md"}},prerenderedAt:void 0}}("text","element","code-inline","left","p","jwt","a","th","td",".","The ","\u002Fconfiguration\u002Fblock\u002Fdefinitions","tr",", "," and "," header.","key"," or ","key_file","li","signing_ttl",false,"JWT","root","h1"," block lets you configure JSON Web Token access control for your gateway.\nLike all ","\u002Fconfiguration\u002Faccess-control","access control"," types, the "," block is defined in\nthe ","definitions"," Block"," and can be referenced in all configuration blocks by its\nrequired ","em","label","Since responses from endpoints protected by JWT access controls are not publicly cacheable, a ","Cache-Control: private"," header field is added to the response, unless this feature is disabled with ","disable_private_caching = true","table","thead","Block name","Context","Label","Nested block(s)","tbody","Definitions Block","âš  required","\u002Fconfiguration\u002Fblock\u002Fbackend","JWKS ","backend","\u002Fconfiguration\u002Fblock\u002Ferror_handler","Error Handler Block(s)","attributes","[{\"default\":\"\",\"description\":\"[`backend` block](\u002Fconfiguration\u002Fblock\u002Fbackend) reference for enhancing JWKS requests.\",\"name\":\"backend\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Name of claim containing the granted permissions. The claim value must either be a string containing a space-separated list of permissions or a list of string permissions.\",\"name\":\"beta_permissions_claim\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Mapping of granted permissions to additional granted permissions. Maps values from `beta_permissions_claim` and those created from `beta_roles_map`. The map is called recursively.\",\"name\":\"beta_permissions_map\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"Name of claim specifying the roles of the user represented by the token. The claim value must either be a string containing a space-separated list of role values or a list of string role values.\",\"name\":\"beta_roles_claim\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Mapping of roles to granted permissions. Non-mapped roles can be assigned with `*` to specific permissions.\",\"name\":\"beta_roles_map\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"Object with claims that must be given for a valid token (equals comparison with JWT payload). The claim values are evaluated per request.\",\"name\":\"claims\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"Read token value from a cookie. Cannot be used together with `header` or `token_value`\",\"name\":\"cookie\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"log fields for [custom logging](\u002Fobservation\u002Flogging#custom-logging). Inherited by nested blocks.\",\"name\":\"custom_log_fields\",\"type\":\"object\"},{\"default\":\"false\",\"description\":\"If set to `true`, Couper does not add the `private` directive to the `Cache-Control` HTTP header field value.\",\"name\":\"disable_private_caching\",\"type\":\"bool\"},{\"default\":\"\",\"description\":\"Read token value from the given request header field. Implies `Bearer` if `Authorization` (case-insensitive) is used, otherwise any other header name can be used. Cannot be used together with `cookie` or `token_value`.\",\"name\":\"header\",\"type\":\"string\"},{\"default\":\"\\\"1h\\\"\",\"description\":\"Time period the cached JWK set stays valid after its TTL has passed.\",\"name\":\"jwks_max_stale\",\"type\":\"duration\"},{\"default\":\"\\\"1h\\\"\",\"description\":\"Time period the JWK set stays valid and may be cached.\",\"name\":\"jwks_ttl\",\"type\":\"duration\"},{\"default\":\"\",\"description\":\"URI pointing to a set of [JSON Web Keys (RFC 7517)](https:\u002F\u002Fdatatracker.ietf.org\u002Fdoc\u002Fhtml\u002Frfc7517)\",\"name\":\"jwks_url\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Public key (in PEM format) for `RS*` and `ES*` variants or the secret for `HS*` algorithm.\",\"name\":\"key\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Optional file reference instead of `key` usage.\",\"name\":\"key_file\",\"type\":\"string\"},{\"default\":\"[]\",\"description\":\"List of claim names that must be given for a valid token.\",\"name\":\"required_claims\",\"type\":\"tuple (string)\"},{\"default\":\"\",\"description\":\"Valid values: `RS256`, `RS384`, `RS512`, `HS256`, `HS384`, `HS512`, `ES256`, `ES384`, `ES512`\",\"name\":\"signature_algorithm\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Private key (in PEM format) for `RS*` and `ES*` variants.\",\"name\":\"signing_key\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Optional file reference instead of `signing_key` usage.\",\"name\":\"signing_key_file\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The token's time-to-live (creates the `exp` claim).\",\"name\":\"signing_ttl\",\"type\":\"duration\"},{\"default\":\"\",\"description\":\"Expression to obtain the token. Cannot be used together with `cookie` or `header`.\",\"name\":\"token_value\",\"type\":\"string\"}]","The attributes ","header","cookie","token_value"," are mutually exclusive.\nIf all three attributes are missing, ","header = \"Authorization\""," will be implied, i.e. the token will be read from the incoming ","Authorization","If the key to verify the signatures of tokens does not change over time, it should be specified via either "," (together with ","signature_algorithm",").\nOtherwise, a JSON web key set should be referenced via ","jwks_url","; in this case, the tokens need a ","kid","A JWT access control configured by this block can extract permissions from","ul","the value of the claim specified by ","beta_permissions_claim"," and","the result of mapping the value of the claim specified by ","beta_roles_claim"," using the ","beta_roles_map"," block may also be referenced by the ","\u002Fconfiguration\u002Ffunctions","jwt_sign()"," function",", if it has a "," defined. For ","HS*"," algorithms the signing key is taken from ","\u002F",", for ","RS*","ES*"," algorithms, ","signing_key","signing_key_file"," have to be specified.","blockquote","strong","Note:"," A "," block with "," cannot have the same label as a ","jwt_signing_profile"," block.","duration",2))