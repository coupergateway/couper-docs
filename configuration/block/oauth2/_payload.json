[{"data":1,"prerenderedAt":243},["Reactive",2],{"content-query-0qWYA11NNR":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":238,"_id":239,"_source":240,"_file":241,"_extension":242},"/configuration/block/oauth2","block",false,"","OAuth2","The oauth2 block in the Backend Block context configures an OAuth2 flow to request a bearer token for the backend request.",{"type":11,"children":12,"toc":235},"root",[13,21,44,62,64,121,134,197,202,230],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"oauth2",[19],{"type":20,"value":8},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25,27,33,35,42],{"type":20,"value":26},"The ",{"type":14,"tag":28,"props":29,"children":31},"code",{"className":30},[],[32],{"type":20,"value":17},{"type":20,"value":34}," block in the ",{"type":14,"tag":36,"props":37,"children":39},"a",{"href":38},"/configuration/block/backend",[40],{"type":20,"value":41},"Backend Block",{"type":20,"value":43}," context configures an OAuth2 flow to request a bearer token for the backend request.",{"type":14,"tag":22,"props":45,"children":46},{},[47,53,55,60],{"type":14,"tag":48,"props":49,"children":50},"strong",{},[51],{"type":20,"value":52},"Note:",{"type":20,"value":54}," The token received from the authorization server's token endpoint is stored ",{"type":14,"tag":48,"props":56,"children":57},{},[58],{"type":20,"value":59},"per backend",{"type":20,"value":61},". So even with flows where a user's account characteristics like username/password or email address are involved, there is no way to \"switch\" from one user to another depending on the client request.",{"type":20,"value":63},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":14,"tag":65,"props":66,"children":67},"table",{},[68,93],{"type":14,"tag":69,"props":70,"children":71},"thead",{},[72],{"type":14,"tag":73,"props":74,"children":75},"tr",{},[76,83,88],{"type":14,"tag":77,"props":78,"children":80},"th",{"align":79},"left",[81],{"type":20,"value":82},"Block name",{"type":14,"tag":77,"props":84,"children":85},{"align":79},[86],{"type":20,"value":87},"Context",{"type":14,"tag":77,"props":89,"children":90},{"align":79},[91],{"type":20,"value":92},"Label",{"type":14,"tag":94,"props":95,"children":96},"tbody",{},[97],{"type":14,"tag":73,"props":98,"children":99},{},[100,109,116],{"type":14,"tag":101,"props":102,"children":103},"td",{"align":79},[104],{"type":14,"tag":28,"props":105,"children":107},{"className":106},[],[108],{"type":20,"value":17},{"type":14,"tag":101,"props":110,"children":111},{"align":79},[112],{"type":14,"tag":36,"props":113,"children":114},{"href":38},[115],{"type":20,"value":41},{"type":14,"tag":101,"props":117,"children":118},{"align":79},[119],{"type":20,"value":120},"no label",{"type":14,"tag":22,"props":122,"children":123},{},[124,126,132],{"type":20,"value":125},"A nested ",{"type":14,"tag":28,"props":127,"children":129},{"className":128},[],[130],{"type":20,"value":131},"jwt_signing_profile",{"type":20,"value":133}," block is used in two cases:",{"type":14,"tag":135,"props":136,"children":137},"ul",{},[138,168],{"type":14,"tag":139,"props":140,"children":141},"li",{},[142,144,150,152,158,160,166],{"type":20,"value":143},"to create a client assertion if ",{"type":14,"tag":28,"props":145,"children":147},{"className":146},[],[148],{"type":20,"value":149},"token_endpoint_auth_method",{"type":20,"value":151}," is either ",{"type":14,"tag":28,"props":153,"children":155},{"className":154},[],[156],{"type":20,"value":157},"\"client_secret_jwt\"",{"type":20,"value":159}," or ",{"type":14,"tag":28,"props":161,"children":163},{"className":162},[],[164],{"type":20,"value":165},"\"private_key_jwt\"",{"type":20,"value":167},"; or",{"type":14,"tag":139,"props":169,"children":170},{},[171,173,179,181,187,189,195],{"type":20,"value":172},"to create an assertion if ",{"type":14,"tag":28,"props":174,"children":176},{"className":175},[],[177],{"type":20,"value":178},"grant_type",{"type":20,"value":180}," is ",{"type":14,"tag":28,"props":182,"children":184},{"className":183},[],[185],{"type":20,"value":186},"\"urn:ietf:params:oauth:grant-type:jwt-bearer\"",{"type":20,"value":188}," and no ",{"type":14,"tag":28,"props":190,"children":192},{"className":191},[],[193],{"type":20,"value":194},"assertion",{"type":20,"value":196}," attribute is set.",{"type":14,"tag":198,"props":199,"children":201},"attributes",{":values":200},"[{\"default\":\"\",\"description\":\"The assertion (JWT for jwt-bearer flow). Required if `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"` and no nested `jwt_signing_profile` block is present.\",\"name\":\"assertion\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"References a [backend](/configuration/block/backend) in [definitions](/configuration/block/definitions) for token requests. Mutually exclusive with `backend` block.\",\"name\":\"backend\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client identifier. Required unless the `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"client_id\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client password. Required unless `token_endpoint_auth_method` is `\\\"private_key_jwt\\\"` or the `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"client_secret\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Required, valid values: `\\\"client_credentials\\\"`, `\\\"password\\\"`, `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"grant_type\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The (service account's) password (for password flow). Required if grant_type is `\\\"password\\\"`.\",\"name\":\"password\",\"type\":\"string\"},{\"default\":\"1\",\"description\":\"The number of retries to get the token and resource, if the resource-request responds with `401 Unauthorized` HTTP status code.\",\"name\":\"retries\",\"type\":\"number\"},{\"default\":\"\",\"description\":\"A space separated list of requested scope values for the access token.\",\"name\":\"scope\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"URL of the token endpoint at the authorization server.\",\"name\":\"token_endpoint\",\"type\":\"string\"},{\"default\":\"\\\"client_secret_basic\\\"\",\"description\":\"Defines the method to authenticate the client at the token endpoint. If set to `\\\"client_secret_post\\\"`, the client credentials are transported in the request body. If set to `\\\"client_secret_basic\\\"`, the client credentials are transported via Basic Authentication. If set to `\\\"client_secret_jwt\\\"`, the client is authenticated via a JWT signed with the `client_secret`. If set to `\\\"private_key_jwt\\\"`, the client is authenticated via a JWT signed with its private key (see `jwt_signing_profile` block).\",\"name\":\"token_endpoint_auth_method\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The (service account's) username (for password flow). Required if grant_type is `\\\"password\\\"`.\",\"name\":\"username\",\"type\":\"string\"}]",[],{"type":14,"tag":22,"props":203,"children":204},{},[205,207,213,215,221,223,228],{"type":20,"value":206},"The HTTP header field ",{"type":14,"tag":28,"props":208,"children":210},{"className":209},[],[211],{"type":20,"value":212},"Accept: application/json",{"type":20,"value":214}," is automatically added to the token request. This can be modified with ",{"type":14,"tag":36,"props":216,"children":218},{"href":217},"/configuration/modifiers#request-header",[219],{"type":20,"value":220},"request header modifiers",{"type":20,"value":222}," in a ",{"type":14,"tag":36,"props":224,"children":225},{"href":38},[226],{"type":20,"value":227},"backend block",{"type":20,"value":229},".",{"type":14,"tag":231,"props":232,"children":234},"blocks",{":values":233},"[{\"description\":\"Configures a [backend](/configuration/block/backend) for token requests (zero or one). Mutually exclusive with `backend` attribute.\",\"name\":\"backend\"},{\"description\":\"Configures a [JWT signing profile](/configuration/block/jwt_signing_profile) to create a client assertion if `token_endpoint_auth_method` is either `\\\"client_secret_jwt\\\"` or `\\\"private_key_jwt\\\"`, or to create an assertion if `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"` and no `assertion` attribute is set (zero or one).\",\"name\":\"jwt_signing_profile\"}]",[],{"title":7,"searchDepth":236,"depth":236,"links":237},2,[],"markdown","content:2.configuration:4.block:oauth2.md","content","2.configuration/4.block/oauth2.md","md",1720791465543]