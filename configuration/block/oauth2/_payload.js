export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai){return {data:{"content-query-0qWYA11NNR":{_path:"\u002Fconfiguration\u002Fblock\u002Foauth2",_draft:o,_partial:o,_locale:"en",_empty:o,title:p,description:"The oauth2 block in the Backend Block context configures an OAuth2 flow to request a bearer token for the backend request.",excerpt:{type:q,children:[{type:b,tag:r,props:{id:g},children:[{type:a,value:p}]},{type:b,tag:e,props:{},children:[{type:a,value:s},{type:b,tag:c,props:{},children:[{type:a,value:g}]},{type:a,value:t},{type:b,tag:f,props:{href:h},children:[{type:a,value:k}]},{type:a,value:u}]},{type:b,tag:e,props:{},children:[{type:b,tag:l,props:{},children:[{type:a,value:v}]},{type:a,value:w},{type:b,tag:l,props:{},children:[{type:a,value:x}]},{type:a,value:y}]},{type:b,tag:z,props:{},children:[{type:b,tag:A,props:{},children:[{type:b,tag:m,props:{},children:[{type:b,tag:i,props:{align:d},children:[{type:a,value:B}]},{type:b,tag:i,props:{align:d},children:[{type:a,value:C}]},{type:b,tag:i,props:{align:d},children:[{type:a,value:D}]}]}]},{type:b,tag:E,props:{},children:[{type:b,tag:m,props:{},children:[{type:b,tag:j,props:{align:d},children:[{type:b,tag:c,props:{},children:[{type:a,value:g}]}]},{type:b,tag:j,props:{align:d},children:[{type:b,tag:f,props:{href:h},children:[{type:a,value:k}]}]},{type:b,tag:j,props:{align:d},children:[{type:a,value:F}]}]}]}]},{type:b,tag:e,props:{},children:[{type:a,value:G},{type:b,tag:c,props:{},children:[{type:a,value:H}]},{type:a,value:I}]},{type:b,tag:J,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:K},{type:b,tag:c,props:{},children:[{type:a,value:L}]},{type:a,value:M},{type:b,tag:c,props:{},children:[{type:a,value:N}]},{type:a,value:O},{type:b,tag:c,props:{},children:[{type:a,value:P}]},{type:a,value:Q}]},{type:b,tag:n,props:{},children:[{type:a,value:R},{type:b,tag:c,props:{},children:[{type:a,value:S}]},{type:a,value:T},{type:b,tag:c,props:{},children:[{type:a,value:U}]},{type:a,value:V},{type:b,tag:c,props:{},children:[{type:a,value:W}]},{type:a,value:X}]}]},{type:b,tag:Y,props:{":values":Z},children:[]},{type:b,tag:e,props:{},children:[{type:a,value:_},{type:b,tag:c,props:{},children:[{type:a,value:$}]},{type:a,value:aa},{type:b,tag:f,props:{href:ab},children:[{type:a,value:ac}]},{type:a,value:ad},{type:b,tag:f,props:{href:h},children:[{type:a,value:ae}]},{type:a,value:af}]},{type:b,tag:ag,props:{":values":ah},children:[]}]},body:{type:q,children:[{type:b,tag:r,props:{id:g},children:[{type:a,value:p}]},{type:b,tag:e,props:{},children:[{type:a,value:s},{type:b,tag:c,props:{},children:[{type:a,value:g}]},{type:a,value:t},{type:b,tag:f,props:{href:h},children:[{type:a,value:k}]},{type:a,value:u}]},{type:b,tag:e,props:{},children:[{type:b,tag:l,props:{},children:[{type:a,value:v}]},{type:a,value:w},{type:b,tag:l,props:{},children:[{type:a,value:x}]},{type:a,value:y}]},{type:b,tag:z,props:{},children:[{type:b,tag:A,props:{},children:[{type:b,tag:m,props:{},children:[{type:b,tag:i,props:{align:d},children:[{type:a,value:B}]},{type:b,tag:i,props:{align:d},children:[{type:a,value:C}]},{type:b,tag:i,props:{align:d},children:[{type:a,value:D}]}]}]},{type:b,tag:E,props:{},children:[{type:b,tag:m,props:{},children:[{type:b,tag:j,props:{align:d},children:[{type:b,tag:c,props:{},children:[{type:a,value:g}]}]},{type:b,tag:j,props:{align:d},children:[{type:b,tag:f,props:{href:h},children:[{type:a,value:k}]}]},{type:b,tag:j,props:{align:d},children:[{type:a,value:F}]}]}]}]},{type:b,tag:e,props:{},children:[{type:a,value:G},{type:b,tag:c,props:{},children:[{type:a,value:H}]},{type:a,value:I}]},{type:b,tag:J,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:K},{type:b,tag:c,props:{},children:[{type:a,value:L}]},{type:a,value:M},{type:b,tag:c,props:{},children:[{type:a,value:N}]},{type:a,value:O},{type:b,tag:c,props:{},children:[{type:a,value:P}]},{type:a,value:Q}]},{type:b,tag:n,props:{},children:[{type:a,value:R},{type:b,tag:c,props:{},children:[{type:a,value:S}]},{type:a,value:T},{type:b,tag:c,props:{},children:[{type:a,value:U}]},{type:a,value:V},{type:b,tag:c,props:{},children:[{type:a,value:W}]},{type:a,value:X}]}]},{type:b,tag:Y,props:{":values":Z},children:[]},{type:b,tag:e,props:{},children:[{type:a,value:_},{type:b,tag:c,props:{},children:[{type:a,value:$}]},{type:a,value:aa},{type:b,tag:f,props:{href:ab},children:[{type:a,value:ac}]},{type:a,value:ad},{type:b,tag:f,props:{href:h},children:[{type:a,value:ae}]},{type:a,value:af}]},{type:b,tag:ag,props:{":values":ah},children:[]}],toc:{title:"",searchDepth:ai,depth:ai,links:[]}},_type:"markdown",_id:"content:2.configuration:4.block:oauth2.md",_source:"content",_file:"2.configuration\u002F4.block\u002Foauth2.md",_extension:"md"}},prerenderedAt:void 0}}("text","element","code-inline","left","p","a","oauth2","\u002Fconfiguration\u002Fblock\u002Fbackend","th","td","Backend Block","strong","tr","li",false,"OAuth2","root","h1","The "," block in the "," context configures an OAuth2 flow to request a bearer token for the backend request.","Note:"," The token received from the authorization server's token endpoint is stored ","per backend",". So even with flows where a user's account characteristics like username\u002Fpassword or email address are involved, there is no way to \"switch\" from one user to another depending on the client request.","table","thead","Block name","Context","Label","tbody","no label","A nested ","jwt_signing_profile"," block is used in two cases:","ul","to create a client assertion if ","token_endpoint_auth_method"," is either ","\"client_secret_jwt\""," or ","\"private_key_jwt\"","; or","to create an assertion if ","grant_type"," is ","\"urn:ietf:params:oauth:grant-type:jwt-bearer\""," and no ","assertion"," attribute is set.","attributes","[{\"default\":\"\",\"description\":\"The assertion (JWT for jwt-bearer flow). Required if `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"` and no nested `jwt_signing_profile` block is present.\",\"name\":\"assertion\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"References a [backend](\u002Fconfiguration\u002Fblock\u002Fbackend) in [definitions](\u002Fconfiguration\u002Fblock\u002Fdefinitions) for token requests. Mutually exclusive with `backend` block.\",\"name\":\"backend\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client identifier. Required unless the `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"client_id\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client password. Required unless `token_endpoint_auth_method` is `\\\"private_key_jwt\\\"` or the `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"client_secret\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Required, valid values: `\\\"client_credentials\\\"`, `\\\"password\\\"`, `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"grant_type\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The (service account's) password (for password flow). Required if grant_type is `\\\"password\\\"`.\",\"name\":\"password\",\"type\":\"string\"},{\"default\":\"1\",\"description\":\"The number of retries to get the token and resource, if the resource-request responds with `401 Unauthorized` HTTP status code.\",\"name\":\"retries\",\"type\":\"number\"},{\"default\":\"\",\"description\":\"A space separated list of requested scope values for the access token.\",\"name\":\"scope\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"URL of the token endpoint at the authorization server.\",\"name\":\"token_endpoint\",\"type\":\"string\"},{\"default\":\"\\\"client_secret_basic\\\"\",\"description\":\"Defines the method to authenticate the client at the token endpoint. If set to `\\\"client_secret_post\\\"`, the client credentials are transported in the request body. If set to `\\\"client_secret_basic\\\"`, the client credentials are transported via Basic Authentication. If set to `\\\"client_secret_jwt\\\"`, the client is authenticated via a JWT signed with the `client_secret`. If set to `\\\"private_key_jwt\\\"`, the client is authenticated via a JWT signed with its private key (see `jwt_signing_profile` block).\",\"name\":\"token_endpoint_auth_method\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The (service account's) username (for password flow). Required if grant_type is `\\\"password\\\"`.\",\"name\":\"username\",\"type\":\"string\"}]","The HTTP header field ","Accept: application\u002Fjson"," is automatically added to the token request. This can be modified with ","\u002Fconfiguration\u002Fmodifiers#request-header","request header modifiers"," in a ","backend block",".","blocks","[{\"description\":\"Configures a [backend](\u002Fconfiguration\u002Fblock\u002Fbackend) for token requests (zero or one). Mutually exclusive with `backend` attribute.\",\"name\":\"backend\"},{\"description\":\"Configures a [JWT signing profile](\u002Fconfiguration\u002Fblock\u002Fjwt_signing_profile) to create a client assertion if `token_endpoint_auth_method` is either `\\\"client_secret_jwt\\\"` or `\\\"private_key_jwt\\\"`, or to create an assertion if `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"` and no `assertion` attribute is set (zero or one).\",\"name\":\"jwt_signing_profile\"}]",2))