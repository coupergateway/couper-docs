export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F){return {data:{"content-query-kgAqgsBLC0":{_path:"\u002Fconfiguration\u002Fblock\u002Frate_limit",_draft:i,_partial:i,_locale:"en",_empty:i,title:j,description:k,excerpt:{type:l,children:[{type:a,tag:m,props:{id:n},children:[{type:b,value:j}]},{type:a,tag:o,props:{},children:[{type:b,value:k}]},{type:a,tag:p,props:{},children:[{type:a,tag:q,props:{},children:[{type:a,tag:f,props:{},children:[{type:a,tag:d,props:{align:c},children:[{type:b,value:r}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:s}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:t}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:u}]}]}]},{type:a,tag:v,props:{},children:[{type:a,tag:f,props:{},children:[{type:a,tag:e,props:{align:c},children:[{type:a,tag:g,props:{},children:[{type:b,value:w}]}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:x},{type:a,tag:y,props:{href:z},children:[{type:a,tag:g,props:{},children:[{type:b,value:A}]},{type:b,value:B}]}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:h}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:h}]}]}]}]},{type:a,tag:C,props:{":values":D},children:[]},{type:a,tag:E,props:{},children:[]}]},body:{type:l,children:[{type:a,tag:m,props:{id:n},children:[{type:b,value:j}]},{type:a,tag:o,props:{},children:[{type:b,value:k}]},{type:a,tag:p,props:{},children:[{type:a,tag:q,props:{},children:[{type:a,tag:f,props:{},children:[{type:a,tag:d,props:{align:c},children:[{type:b,value:r}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:s}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:t}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:u}]}]}]},{type:a,tag:v,props:{},children:[{type:a,tag:f,props:{},children:[{type:a,tag:e,props:{align:c},children:[{type:a,tag:g,props:{},children:[{type:b,value:w}]}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:x},{type:a,tag:y,props:{href:z},children:[{type:a,tag:g,props:{},children:[{type:b,value:A}]},{type:b,value:B}]}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:h}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:h}]}]}]}]},{type:a,tag:C,props:{":values":D},children:[]},{type:a,tag:E,props:{},children:[]}],toc:{title:"",searchDepth:F,depth:F,links:[]}},_type:"markdown",_id:"content:2.configuration:4.block:rate_limit.md",_source:"content",_file:"2.configuration\u002F4.block\u002Frate_limit.md",_extension:"md"}},prerenderedAt:void 0}}("element","text","left","th","td","tr","code-inline","-",false,"Rate Limit (Beta)","Rate limiting protects backend services. It implements quota management used to avoid cascading failures or to spare resources.","root","h1","rate-limit-beta","p","table","thead","Block name","Context","Label","Nested block(s)","tbody","beta_rate_limit","named ","a","\u002Fconfiguration\u002Fblock\u002Fbackend","backend"," block","attributes","[{\"default\":\"\\\"wait\\\"\",\"description\":\"If `mode` is set to `block` and the rate limit is exceeded, the client request is immediately answered with HTTP status code `429` (Too Many Requests) and no backend request is made. If `mode` is set to `wait` and the rate limit is exceeded, the request waits for the next free rate limiting period.\",\"name\":\"mode\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Defines the number of allowed backend requests in a period.\",\"name\":\"per_period\",\"type\":\"number\"},{\"default\":\"\",\"description\":\"Defines the rate limit period.\",\"name\":\"period\",\"type\":\"duration\"},{\"default\":\"\\\"sliding\\\"\",\"description\":\"Defines the window of the period. A `fixed` window permits `per_period` requests within `period` after the first request to the parent backend. After the `period` has expired, another `per_period` request is permitted. The sliding window ensures that only `per_period` requests are sent in any interval of length period.\",\"name\":\"period_window\",\"type\":\"string\"}]","duration",2))