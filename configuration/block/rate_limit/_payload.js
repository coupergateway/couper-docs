export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E){return {data:{"content-query-kgAqgsBLC0":{_path:"\u002Fconfiguration\u002Fblock\u002Frate_limit",_draft:h,_partial:h,_locale:"en",_empty:h,title:i,description:j,excerpt:{type:k,children:[{type:a,tag:l,props:{id:m},children:[{type:b,value:i}]},{type:a,tag:n,props:{},children:[{type:b,value:j}]},{type:a,tag:o,props:{},children:[{type:a,tag:p,props:{},children:[{type:a,tag:f,props:{},children:[{type:a,tag:d,props:{align:c},children:[{type:b,value:q}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:r}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:s}]}]}]},{type:a,tag:t,props:{},children:[{type:a,tag:f,props:{},children:[{type:a,tag:e,props:{align:c},children:[{type:a,tag:g,props:{},children:[{type:b,value:u}]}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:v},{type:a,tag:w,props:{href:x},children:[{type:a,tag:g,props:{},children:[{type:b,value:y}]},{type:b,value:z}]}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:A}]}]}]}]},{type:a,tag:B,props:{":values":C},children:[]},{type:a,tag:D,props:{},children:[]}]},body:{type:k,children:[{type:a,tag:l,props:{id:m},children:[{type:b,value:i}]},{type:a,tag:n,props:{},children:[{type:b,value:j}]},{type:a,tag:o,props:{},children:[{type:a,tag:p,props:{},children:[{type:a,tag:f,props:{},children:[{type:a,tag:d,props:{align:c},children:[{type:b,value:q}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:r}]},{type:a,tag:d,props:{align:c},children:[{type:b,value:s}]}]}]},{type:a,tag:t,props:{},children:[{type:a,tag:f,props:{},children:[{type:a,tag:e,props:{align:c},children:[{type:a,tag:g,props:{},children:[{type:b,value:u}]}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:v},{type:a,tag:w,props:{href:x},children:[{type:a,tag:g,props:{},children:[{type:b,value:y}]},{type:b,value:z}]}]},{type:a,tag:e,props:{align:c},children:[{type:b,value:A}]}]}]}]},{type:a,tag:B,props:{":values":C},children:[]},{type:a,tag:D,props:{},children:[]}],toc:{title:"",searchDepth:E,depth:E,links:[]}},_type:"markdown",_id:"content:2.configuration:4.block:rate_limit.md",_source:"content",_file:"2.configuration\u002F4.block\u002Frate_limit.md",_extension:"md"}},prerenderedAt:void 0}}("element","text","left","th","td","tr","code-inline",false,"Rate Limit (Beta)","Rate limiting protects backend services. It implements quota management used to avoid cascading failures or to spare resources.","root","h1","rate-limit-beta","p","table","thead","Block name","Context","Label","tbody","beta_rate_limit","named ","a","\u002Fconfiguration\u002Fblock\u002Fbackend","backend"," block","no label","attributes","[{\"default\":\"\\\"wait\\\"\",\"description\":\"If `mode` is set to `block` and the rate limit is exceeded, the client request is immediately answered with HTTP status code `429` (Too Many Requests) and no backend request is made. If `mode` is set to `wait` and the rate limit is exceeded, the request waits for the next free rate limiting period.\",\"name\":\"mode\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Defines the number of allowed backend requests in a period.\",\"name\":\"per_period\",\"type\":\"number\"},{\"default\":\"\",\"description\":\"Defines the rate limit period.\",\"name\":\"period\",\"type\":\"duration\"},{\"default\":\"\\\"sliding\\\"\",\"description\":\"Defines the window of the period. A `fixed` window permits `per_period` requests within `period` after the first request to the parent backend. After the `period` has expired, another `per_period` request is permitted. The sliding window ensures that only `per_period` requests are sent in any interval of length period.\",\"name\":\"period_window\",\"type\":\"string\"}]","duration",2))