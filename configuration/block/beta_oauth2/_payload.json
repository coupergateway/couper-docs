[{"data":1,"prerenderedAt":266},["Reactive",2],{"content-query-t9CmTAvdob":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":261,"_id":262,"_source":263,"_file":264,"_extension":265},"/configuration/block/beta_oauth2","block",false,"","OAuth2 AC (Beta)","The beta_oauth2 block lets you configure the oauth2_authorization_url() function and an access\ncontrol for an OAuth2 Authorization Code Grant Flow redirect endpoint.\nLike all access control types, the beta_oauth2 block is defined in the definitions block and can be referenced in all configuration blocks by its required label.",{"type":11,"children":12,"toc":258},"root",[13,21,96,98,156,192,197,225,253],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"oauth2-ac-beta",[19],{"type":20,"value":8},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25,27,34,36,49,51,57,59,65,67,72,74,86,88,94],{"type":20,"value":26},"The ",{"type":14,"tag":28,"props":29,"children":31},"code",{"className":30},[],[32],{"type":20,"value":33},"beta_oauth2",{"type":20,"value":35}," block lets you configure the ",{"type":14,"tag":37,"props":38,"children":40},"a",{"href":39},"/configuration/functions",[41,47],{"type":14,"tag":28,"props":42,"children":44},{"className":43},[],[45],{"type":20,"value":46},"oauth2_authorization_url()",{"type":20,"value":48}," function",{"type":20,"value":50}," and an access\ncontrol for an OAuth2 ",{"type":14,"tag":52,"props":53,"children":54},"strong",{},[55],{"type":20,"value":56},"Authorization Code Grant Flow",{"type":20,"value":58}," redirect endpoint.\nLike all ",{"type":14,"tag":37,"props":60,"children":62},{"href":61},"/configuration/access-control",[63],{"type":20,"value":64},"access control",{"type":20,"value":66}," types, the ",{"type":14,"tag":28,"props":68,"children":70},{"className":69},[],[71],{"type":20,"value":33},{"type":20,"value":73}," block is defined in the ",{"type":14,"tag":37,"props":75,"children":77},{"href":76},"/configuration/block/definitions",[78,84],{"type":14,"tag":28,"props":79,"children":81},{"className":80},[],[82],{"type":20,"value":83},"definitions",{"type":20,"value":85}," block",{"type":20,"value":87}," and can be referenced in all configuration blocks by its required ",{"type":14,"tag":89,"props":90,"children":91},"em",{},[92],{"type":20,"value":93},"label",{"type":20,"value":95},".",{"type":20,"value":97},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":14,"tag":99,"props":100,"children":101},"table",{},[102,127],{"type":14,"tag":103,"props":104,"children":105},"thead",{},[106],{"type":14,"tag":107,"props":108,"children":109},"tr",{},[110,117,122],{"type":14,"tag":111,"props":112,"children":114},"th",{"align":113},"left",[115],{"type":20,"value":116},"Block name",{"type":14,"tag":111,"props":118,"children":119},{"align":113},[120],{"type":20,"value":121},"Context",{"type":14,"tag":111,"props":123,"children":124},{"align":113},[125],{"type":20,"value":126},"Label",{"type":14,"tag":128,"props":129,"children":130},"tbody",{},[131],{"type":14,"tag":107,"props":132,"children":133},{},[134,143,151],{"type":14,"tag":135,"props":136,"children":137},"td",{"align":113},[138],{"type":14,"tag":28,"props":139,"children":141},{"className":140},[],[142],{"type":20,"value":33},{"type":14,"tag":135,"props":144,"children":145},{"align":113},[146],{"type":14,"tag":37,"props":147,"children":148},{"href":76},[149],{"type":20,"value":150},"Definitions Block",{"type":14,"tag":135,"props":152,"children":153},{"align":113},[154],{"type":20,"value":155},"âš  required",{"type":14,"tag":22,"props":157,"children":158},{},[159,161,167,169,175,177,183,185,191],{"type":20,"value":160},"A nested ",{"type":14,"tag":28,"props":162,"children":164},{"className":163},[],[165],{"type":20,"value":166},"jwt_signing_profile",{"type":20,"value":168}," block is used to create a client assertion if ",{"type":14,"tag":28,"props":170,"children":172},{"className":171},[],[173],{"type":20,"value":174},"token_endpoint_auth_method",{"type":20,"value":176}," is either ",{"type":14,"tag":28,"props":178,"children":180},{"className":179},[],[181],{"type":20,"value":182},"\"client_secret_jwt\"",{"type":20,"value":184}," or ",{"type":14,"tag":28,"props":186,"children":188},{"className":187},[],[189],{"type":20,"value":190},"\"private_key_jwt\"",{"type":20,"value":95},{"type":14,"tag":193,"props":194,"children":196},"attributes",{":values":195},"[{\"default\":\"\",\"description\":\"The authorization server endpoint URL used for authorization.\",\"name\":\"authorization_endpoint\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"References a [backend](/configuration/block/backend) in [definitions](/configuration/block/definitions) for token requests. Mutually exclusive with `backend` block.\",\"name\":\"backend\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client identifier.\",\"name\":\"client_id\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client password. Required unless `token_endpoint_auth_method` is `\\\"private_key_jwt\\\"`.\",\"name\":\"client_secret\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Log fields for [custom logging](/observation/logging#custom-logging). Inherited by nested blocks.\",\"name\":\"custom_log_fields\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"The grant type. Required, to be set to: `\\\"authorization_code\\\"`\",\"name\":\"grant_type\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The Couper endpoint for receiving the authorization code. Relative URL references are resolved against the origin of the current request URL. The origin can be changed with the [`accept_forwarded_url` attribute](/configuration/block/settings) if Couper is running behind a proxy.\",\"name\":\"redirect_uri\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"A space separated list of requested scope values for the access token.\",\"name\":\"scope\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The authorization server endpoint URL used for requesting the token.\",\"name\":\"token_endpoint\",\"type\":\"string\"},{\"default\":\"\\\"client_secret_basic\\\"\",\"description\":\"Defines the method to authenticate the client at the token endpoint. If set to `\\\"client_secret_post\\\"`, the client credentials are transported in the request body. If set to `\\\"client_secret_basic\\\"`, the client credentials are transported via Basic Authentication. If set to `\\\"client_secret_jwt\\\"`, the client is authenticated via a JWT signed with the `client_secret`. If set to `\\\"private_key_jwt\\\"`, the client is authenticated via a JWT signed with its private key (see `jwt_signing_profile` block).\",\"name\":\"token_endpoint_auth_method\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The method to verify the integrity of the authorization code flow. Available values: `\\\"ccm_s256\\\"` (`code_challenge` parameter with `code_challenge_method` `S256`), `\\\"state\\\"` (`state` parameter)\",\"name\":\"verifier_method\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The value of the (unhashed) verifier. E.g. using cookie value created with `oauth2_verifier()` function](../functions)\",\"name\":\"verifier_value\",\"type\":\"string\"}]",[],{"type":14,"tag":22,"props":198,"children":199},{},[200,202,208,210,216,218,224],{"type":20,"value":201},"If the authorization server supports the ",{"type":14,"tag":28,"props":203,"children":205},{"className":204},[],[206],{"type":20,"value":207},"code_challenge_method",{"type":20,"value":209}," ",{"type":14,"tag":28,"props":211,"children":213},{"className":212},[],[214],{"type":20,"value":215},"S256",{"type":20,"value":217}," (a.k.a. PKCE, see RFC 7636), we recommend ",{"type":14,"tag":28,"props":219,"children":221},{"className":220},[],[222],{"type":20,"value":223},"verifier_method = \"ccm_s256\"",{"type":20,"value":95},{"type":14,"tag":22,"props":226,"children":227},{},[228,230,236,238,244,246,252],{"type":20,"value":229},"The HTTP header field ",{"type":14,"tag":28,"props":231,"children":233},{"className":232},[],[234],{"type":20,"value":235},"Accept: application/json",{"type":20,"value":237}," is automatically added to the token request. This can be modified with ",{"type":14,"tag":37,"props":239,"children":241},{"href":240},"/configuration/modifiers#request-header",[242],{"type":20,"value":243},"request header modifiers",{"type":20,"value":245}," in a ",{"type":14,"tag":37,"props":247,"children":249},{"href":248},"/configuration/block/backend",[250],{"type":20,"value":251},"backend block",{"type":20,"value":95},{"type":14,"tag":254,"props":255,"children":257},"blocks",{":values":256},"[{\"description\":\"Configures a [backend](/configuration/block/backend) for token requests (zero or one). Mutually exclusive with `backend` attribute.\",\"name\":\"backend\"},{\"description\":\"Configures an [error handler](/configuration/block/error_handler) (zero or more).\",\"name\":\"error_handler\"},{\"description\":\"Configures a [JWT signing profile](/configuration/block/jwt_signing_profile) to create a client assertion if `token_endpoint_auth_method` is either `\\\"client_secret_jwt\\\"` or `\\\"private_key_jwt\\\"` (zero or one).\",\"name\":\"jwt_signing_profile\"}]",[],{"title":7,"searchDepth":259,"depth":259,"links":260},2,[],"markdown","content:2.configuration:4.block:beta_oauth2.md","content","2.configuration/4.block/beta_oauth2.md","md",1706968164523]