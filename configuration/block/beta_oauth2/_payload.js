export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak){return {data:{"content-query-t9CmTAvdob":{_path:"\u002Fconfiguration\u002Fblock\u002Fbeta_oauth2",_draft:n,_partial:n,_locale:"en",_empty:n,title:o,description:"The beta_oauth2 block lets you configure the oauth2_authorization_url() function and an access\ncontrol for an OAuth2 Authorization Code Grant Flow redirect endpoint.\nLike all access control types, the beta_oauth2 block is defined in the definitions block and can be referenced in all configuration blocks by its required label.",excerpt:{type:p,children:[{type:b,tag:q,props:{id:r},children:[{type:a,value:o}]},{type:b,tag:h,props:{},children:[{type:a,value:s},{type:b,tag:c,props:{},children:[{type:a,value:i}]},{type:a,value:t},{type:b,tag:d,props:{href:u},children:[{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:w}]},{type:a,value:x},{type:b,tag:y,props:{},children:[{type:a,value:z}]},{type:a,value:A},{type:b,tag:d,props:{href:B},children:[{type:a,value:C}]},{type:a,value:D},{type:b,tag:c,props:{},children:[{type:a,value:i}]},{type:a,value:E},{type:b,tag:d,props:{href:k},children:[{type:b,tag:c,props:{},children:[{type:a,value:F}]},{type:a,value:G}]},{type:a,value:H},{type:b,tag:I,props:{},children:[{type:a,value:J}]},{type:a,value:j}]},{type:b,tag:K,props:{},children:[{type:b,tag:L,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:f,props:{align:e},children:[{type:a,value:M}]},{type:b,tag:f,props:{align:e},children:[{type:a,value:N}]},{type:b,tag:f,props:{align:e},children:[{type:a,value:O}]},{type:b,tag:f,props:{align:e},children:[{type:a,value:P}]}]}]},{type:b,tag:Q,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:g,props:{align:e},children:[{type:b,tag:c,props:{},children:[{type:a,value:i}]}]},{type:b,tag:g,props:{align:e},children:[{type:b,tag:d,props:{href:k},children:[{type:a,value:R}]}]},{type:b,tag:g,props:{align:e},children:[{type:a,value:S}]},{type:b,tag:g,props:{align:e},children:[{type:b,tag:d,props:{href:m},children:[{type:a,value:T}]},{type:a,value:U},{type:b,tag:d,props:{href:V},children:[{type:a,value:W}]}]}]}]}]},{type:b,tag:X,props:{":values":Y},children:[]},{type:b,tag:h,props:{},children:[{type:a,value:Z},{type:b,tag:c,props:{},children:[{type:a,value:_}]},{type:a,value:$},{type:b,tag:c,props:{},children:[{type:a,value:aa}]},{type:a,value:ab},{type:b,tag:c,props:{},children:[{type:a,value:ac}]},{type:a,value:j}]},{type:b,tag:h,props:{},children:[{type:a,value:ad},{type:b,tag:c,props:{},children:[{type:a,value:ae}]},{type:a,value:af},{type:b,tag:d,props:{href:ag},children:[{type:a,value:ah}]},{type:a,value:ai},{type:b,tag:d,props:{href:m},children:[{type:a,value:aj}]},{type:a,value:j}]}]},body:{type:p,children:[{type:b,tag:q,props:{id:r},children:[{type:a,value:o}]},{type:b,tag:h,props:{},children:[{type:a,value:s},{type:b,tag:c,props:{},children:[{type:a,value:i}]},{type:a,value:t},{type:b,tag:d,props:{href:u},children:[{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:w}]},{type:a,value:x},{type:b,tag:y,props:{},children:[{type:a,value:z}]},{type:a,value:A},{type:b,tag:d,props:{href:B},children:[{type:a,value:C}]},{type:a,value:D},{type:b,tag:c,props:{},children:[{type:a,value:i}]},{type:a,value:E},{type:b,tag:d,props:{href:k},children:[{type:b,tag:c,props:{},children:[{type:a,value:F}]},{type:a,value:G}]},{type:a,value:H},{type:b,tag:I,props:{},children:[{type:a,value:J}]},{type:a,value:j}]},{type:b,tag:K,props:{},children:[{type:b,tag:L,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:f,props:{align:e},children:[{type:a,value:M}]},{type:b,tag:f,props:{align:e},children:[{type:a,value:N}]},{type:b,tag:f,props:{align:e},children:[{type:a,value:O}]},{type:b,tag:f,props:{align:e},children:[{type:a,value:P}]}]}]},{type:b,tag:Q,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:g,props:{align:e},children:[{type:b,tag:c,props:{},children:[{type:a,value:i}]}]},{type:b,tag:g,props:{align:e},children:[{type:b,tag:d,props:{href:k},children:[{type:a,value:R}]}]},{type:b,tag:g,props:{align:e},children:[{type:a,value:S}]},{type:b,tag:g,props:{align:e},children:[{type:b,tag:d,props:{href:m},children:[{type:a,value:T}]},{type:a,value:U},{type:b,tag:d,props:{href:V},children:[{type:a,value:W}]}]}]}]}]},{type:b,tag:X,props:{":values":Y},children:[]},{type:b,tag:h,props:{},children:[{type:a,value:Z},{type:b,tag:c,props:{},children:[{type:a,value:_}]},{type:a,value:$},{type:b,tag:c,props:{},children:[{type:a,value:aa}]},{type:a,value:ab},{type:b,tag:c,props:{},children:[{type:a,value:ac}]},{type:a,value:j}]},{type:b,tag:h,props:{},children:[{type:a,value:ad},{type:b,tag:c,props:{},children:[{type:a,value:ae}]},{type:a,value:af},{type:b,tag:d,props:{href:ag},children:[{type:a,value:ah}]},{type:a,value:ai},{type:b,tag:d,props:{href:m},children:[{type:a,value:aj}]},{type:a,value:j}]}],toc:{title:"",searchDepth:ak,depth:ak,links:[]}},_type:"markdown",_id:"content:2.configuration:4.block:beta_oauth2.md",_source:"content",_file:"2.configuration\u002F4.block\u002Fbeta_oauth2.md",_extension:"md"}},prerenderedAt:void 0}}("text","element","code-inline","a","left","th","td","p","beta_oauth2",".","\u002Fconfiguration\u002Fblock\u002Fdefinitions","tr","\u002Fconfiguration\u002Fblock\u002Fbackend",false,"OAuth2 AC (Beta)","root","h1","oauth2-ac-beta","The "," block lets you configure the ","\u002Fconfiguration\u002Ffunctions","oauth2_authorization_url()"," function"," and an access\ncontrol for an OAuth2 ","strong","Authorization Code Grant Flow"," redirect endpoint.\nLike all ","\u002Fconfiguration\u002Faccess-control","access control"," types, the "," block is defined in the ","definitions"," block"," and can be referenced in all configuration blocks by its required ","em","label","table","thead","Block name","Context","Label","Nested block(s)","tbody","Definitions Block","âš  required","Backend Block",", ","\u002Fconfiguration\u002Fblock\u002Ferror_handler","Error Handler Block","attributes","[{\"default\":\"\",\"description\":\"The authorization server endpoint URL used for authorization.\",\"name\":\"authorization_endpoint\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"[`backend` block](\u002Fconfiguration\u002Fblock\u002Fbackend) reference.\",\"name\":\"backend\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client identifier.\",\"name\":\"client_id\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client password.\",\"name\":\"client_secret\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"log fields for [custom logging](\u002Fobservation\u002Flogging#custom-logging). Inherited by nested blocks.\",\"name\":\"custom_log_fields\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"The grant type. Required, to be set to: `authorization_code`\",\"name\":\"grant_type\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The Couper endpoint for receiving the authorization code. Relative URL references are resolved against the origin of the current request URL. The origin can be changed with the [`accept_forwarded_url` attribute](\u002Fconfiguration\u002Fblock\u002Fsettings) if Couper is running behind a proxy.\",\"name\":\"redirect_uri\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"A space separated list of requested scope values for the access token.\",\"name\":\"scope\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The authorization server endpoint URL used for requesting the token.\",\"name\":\"token_endpoint\",\"type\":\"string\"},{\"default\":\"\\\"client_secret_basic\\\"\",\"description\":\"Defines the method to authenticate the client at the token endpoint. If set to `client_secret_post`, the client credentials are transported in the request body. If set to `client_secret_basic`, the client credentials are transported via Basic Authentication.\",\"name\":\"token_endpoint_auth_method\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The method to verify the integrity of the authorization code flow. Available values: `ccm_s256` (`code_challenge` parameter with `code_challenge_method` `S256`), `state` (`state` parameter)\",\"name\":\"verifier_method\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The value of the (unhashed) verifier. E.g. using cookie value created with `oauth2_verifier()` function](..\u002Ffunctions)\",\"name\":\"verifier_value\",\"type\":\"string\"}]","If the authorization server supports the ","code_challenge_method"," ","S256"," (a.k.a. PKCE, see RFC 7636), we recommend ","verifier_method = \"ccm_s256\"","The HTTP header field ","Accept: application\u002Fjson"," is automatically added to the token request. This can be modified with ","\u002Fconfiguration\u002Fmodifiers#request-header","request header modifiers"," in a ","backend block",2))