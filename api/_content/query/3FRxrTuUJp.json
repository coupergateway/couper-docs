[{"_path":"/configuration/block/server_tls","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"TLS (Server)","description":"TLS settings for the related server.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"tls-server"},"children":[{"type":"text","value":"TLS (Server)"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Block name"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Context"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Label"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Nested block(s)"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"tls"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"/configuration/block/server"},"children":[{"type":"text","value":"Server Block"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"no"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"/configuration/block/server_certificate"},"children":[{"type":"text","value":"Server Certificate(s)"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"/configuration/block/client_certificate"},"children":[{"type":"text","value":"Client Certificate(s)"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"tls"}]},{"type":"text","value":" block allows to configure one or more server certificates in the first place.\nThe certificates will be served on all ports within the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"hosts"}]},{"type":"text","value":" list. Enabling "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"tls"}]},{"type":"text","value":" also enables the upgrade option to the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"HTTP2"}]},{"type":"text","value":" protocol."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The simplest configuration is an empty "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"tls {}"}]},{"type":"text","value":" block which will serve a self signed certificate\nfor local development."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Multiple "},{"type":"element","tag":"a","props":{"href":"/configuration/block/server_certificate"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"server_certificate"}]}]},{"type":"text","value":" or "},{"type":"element","tag":"a","props":{"href":"/configuration/block/client_certificate"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"client_certificate"}]}]},{"type":"text","value":" blocks are allowed."}]},{"type":"element","tag":"h2","props":{"id":"mtls"},"children":[{"type":"text","value":"mTLS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once a "},{"type":"element","tag":"a","props":{"href":"/configuration/block/client_certificate"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"client_certificate"}]}]},{"type":"text","value":" block is defined the server automatically requests and verify a certificate from the client."}]},{"type":"element","tag":"h2","props":{"id":"example"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"code","props":{"code":"server \"couper\" {\n  hosts = [\"*:443\"]\n\n  tls {\n    server_certificate \"api.example.com\" {\n      public_key_file = \"couperServer.crt\" # PEM\n      private_key_file = \"couperServer.key\" # PEM\n    }\n\n    # mTLS\n\n    client_certificate \"IOT\" {\n      ca_certificate_file = \"couperIntermediate.crt\" # PEM\n      # OR(AND!)\n      leaf_certificate_file = \"couperClient.crt\" # PEM\n    }\n  }\n","language":"hcl"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"server \"couper\" {\n  hosts = [\"*:443\"]\n\n  tls {\n    server_certificate \"api.example.com\" {\n      public_key_file = \"couperServer.crt\" # PEM\n      private_key_file = \"couperServer.key\" # PEM\n    }\n\n    # mTLS\n\n    client_certificate \"IOT\" {\n      ca_certificate_file = \"couperIntermediate.crt\" # PEM\n      # OR(AND!)\n      leaf_certificate_file = \"couperClient.crt\" # PEM\n    }\n  }\n"}]}]}]}]},"draft":false,"_type":"markdown","_id":"content:2.configuration:4.block:server_tls.md","_source":"content","_file":"2.configuration/4.block/server_tls.md","_extension":"md"},{"_path":"/configuration/block/settings","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Settings","description":"The settings block lets you configure the more basic and global behavior of your\ngateway instance.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"settings"},"children":[{"type":"text","value":"Settings"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"settings"}]},{"type":"text","value":" block lets you configure the more basic and global behavior of your\ngateway instance."}]},{"type":"element","tag":"attributes","props":{":values":"[{\"default\":\"\",\"description\":\"Which `X-Forwarded-*` request headers should be accepted to change the [request variables](/configuration/variables#request) `url`, `origin`, `protocol`, `host`, `port`. Valid values: `\\\"proto\\\"`, `\\\"host\\\"` and `\\\"port\\\"`. The port in a `X-Forwarded-Port` header takes precedence over a port in `X-Forwarded-Host`. Affects relative URL values for [`sp_acs_url`](/configuration/block/saml) attribute and `redirect_uri` attribute within [`beta_oauth2`](/configuration/block/oauth2) and [`oidc`](/configuration/block/oidc).\",\"name\":\"accept_forwarded_url\",\"type\":\"object\"},{\"default\":\"false\",\"description\":\"enables the Prometheus [metrics](/observation/metrics) exporter\",\"name\":\"beta_metrics\",\"type\":\"bool\"},{\"default\":\"9090\",\"description\":\"Prometheus exporter listen port\",\"name\":\"beta_metrics_port\",\"type\":\"number\"},{\"default\":\"\\\"couper\\\"\",\"description\":\"service name which applies to the `service_name` metric labels\",\"name\":\"beta_service_name\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"adds the given PEM encoded CA certificate to the existing system certificate pool for all outgoing connections\",\"name\":\"ca_file\",\"type\":\"string\"},{\"default\":\"8080\",\"description\":\"Port which will be used if not explicitly specified per host within the [`hosts`](/configuration/block/server) attribute.\",\"name\":\"default_port\",\"type\":\"number\"},{\"default\":\"\",\"description\":\"[environment](/configuration/command-line#global-options) Couper is to run in\",\"name\":\"environment\",\"type\":\"string\"},{\"default\":\"\\\"/healthz\\\"\",\"description\":\"Health path for all configured servers and ports\",\"name\":\"health_path\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"TLS port mappings to define the TLS listen port and the target one. Self-signed certificates will be generated on the fly based on the given hostname. Certificates will be held in memory.\",\"name\":\"https_dev_proxy\",\"type\":\"object\"},{\"default\":\"\\\"common\\\"\",\"description\":\"tab/field based colored logs or JSON logs: `\\\"common\\\"` or `\\\"json\\\"`\",\"name\":\"log_format\",\"type\":\"string\"},{\"default\":\"\\\"info\\\"\",\"description\":\"sets the log level: `\\\"panic\\\"`, `\\\"fatal\\\"`, `\\\"error\\\"`, `\\\"warn\\\"`, `\\\"info\\\"`, `\\\"debug\\\"`, `\\\"trace\\\"`\",\"name\":\"log_level\",\"type\":\"string\"},{\"default\":\"false\",\"description\":\"global option for `json` log format which pretty prints with basic key coloring\",\"name\":\"log_pretty\",\"type\":\"bool\"},{\"default\":\"false\",\"description\":\"disables the connect hop to configured [proxy via environment](https://godoc.org/golang.org/x/net/http/httpproxy)\",\"name\":\"no_proxy_from_env\",\"type\":\"bool\"},{\"default\":\"false\",\"description\":\"enables [profiling](https://github.com/google/pprof/blob/main/doc/README.md#pprof)\",\"name\":\"pprof\",\"type\":\"bool\"},{\"default\":\"6060\",\"description\":\"Port for profiling interface\",\"name\":\"pprof_port\",\"type\":\"number\"},{\"default\":\"\",\"description\":\"client request HTTP header field that transports the `request.id` which Couper takes for logging and transport to the backend (if configured)\",\"name\":\"request_id_accept_from_header\",\"type\":\"string\"},{\"default\":\"\\\"Couper-Request-ID\\\"\",\"description\":\"HTTP header field which Couper uses to transport the `request.id` to the backend\",\"name\":\"request_id_backend_header\",\"type\":\"string\"},{\"default\":\"\\\"Couper-Request-ID\\\"\",\"description\":\"HTTP header field which Couper uses to transport the `request.id` to the client\",\"name\":\"request_id_client_header\",\"type\":\"string\"},{\"default\":\"\\\"common\\\"\",\"description\":\"`\\\"common\\\"` or `\\\"uuid4\\\"`. If set to `\\\"uuid4\\\"` an RFC 4122 UUID is used for `request.id` and related log fields. \",\"name\":\"request_id_format\",\"type\":\"string\"},{\"default\":\"\\\"‌\\\"\",\"description\":\"`\\\"\\\"` or `\\\"strip\\\"`. If set to `\\\"strip\\\"`, the `Secure` flag is removed from all `Set-Cookie` HTTP header fields.\",\"name\":\"secure_cookies\",\"type\":\"string\"},{\"default\":\"false\",\"description\":\"whether to use the `X-Forwarded-Host` header as the request host\",\"name\":\"xfh\",\"type\":\"bool\"}]"},"children":[]}]},"_type":"markdown","_id":"content:2.configuration:4.block:settings.md","_source":"content","_file":"2.configuration/4.block/settings.md","_extension":"md"}]