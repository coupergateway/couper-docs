[{"_path":"/observation/health","_draft":false,"_partial":false,"_empty":false,"title":"Health Check","description":"The health check will answer with status 200 OK on every port with the configured\nhealth_path setting or the\nCOUPER_HEALTH_PATH environment variable.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"health-check"},"children":[{"type":"text","value":"Health Check"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The health check will answer with status "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"200 OK"}]},{"type":"text","value":" on every port with the configured\n"},{"type":"element","tag":"a","props":{"href":"/configuration/block/settings"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"health_path"}]},{"type":"text","value":" setting"}]},{"type":"text","value":" or the\n"},{"type":"element","tag":"a","props":{"href":"/configuration/command-line#other-environment-options"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"COUPER_HEALTH_PATH"}]},{"type":"text","value":" environment variable"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As soon as the gateway instance receives a "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"SIGINT"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"SIGTERM"}]},{"type":"text","value":" the check will return a status\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"500 Internal Server Error"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A shutdown delay ("},{"type":"element","tag":"a","props":{"href":"/configuration/command-line#other-environment-options"},"children":[{"type":"text","value":"environment variable "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"COUPER_TIMING_SHUTDOWN_DELAY"}]}]},{"type":"text","value":")\nallows the server to finish all running requests and gives a load balancer time to pick another gateway instance.\nAfter this delay the server goes into shutdown mode and no new requests will be accepted."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The shutdown timings ("},{"type":"element","tag":"a","props":{"href":"/configuration/command-line#other-environment-options"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"COUPER_TIMING_SHUTDOWN_TIMEOUT"}]}]},{"type":"text","value":")\ndefault to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"0"}]},{"type":"text","value":" which means no delaying with development setups."}]}]},"_type":"markdown","_id":"content:3.observation:health.md","_source":"content","_file":"3.observation/health.md","_extension":"md"},{"_path":"/observation/metrics","_draft":false,"_partial":false,"_empty":false,"title":"Metrics","description":"","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"metrics"},"children":[{"type":"text","value":"Metrics"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#metrics"},"children":[{"type":"text","value":"Metrics"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#prometheus"},"children":[{"type":"text","value":"Prometheus"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#grafana-dashboard"},"children":[{"type":"text","value":"Grafana Dashboard"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#preview"},"children":[{"type":"text","value":"Preview"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#developers"},"children":[{"type":"text","value":"Developers"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our metrics feature is "},{"type":"element","tag":"a","props":{"href":"/getting-started/beta-features"},"children":[{"type":"text","value":"beta"}]},{"type":"text","value":" for now. However, we want to provide some core metrics which can be directly collected from Couper."}]},{"type":"element","tag":"h2","props":{"id":"prometheus"},"children":[{"type":"text","value":"Prometheus"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Couper provides a built-in "},{"type":"element","tag":"a","props":{"href":"https://prometheus.io/","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"Prometheus"}]},{"type":"text","value":" exporter. It is configurable with "},{"type":"element","tag":"a","props":{"href":"/configuration/block/settings"},"children":[{"type":"text","value":"settings"}]},{"type":"text","value":" like port or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"service_name"}]},{"type":"text","value":" label. If enabled the default scrape target port is "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"9090"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"grafana-dashboard"},"children":[{"type":"text","value":"Grafana Dashboard"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Couper provides a maintained Grafana dashboard which you can find here: "},{"type":"element","tag":"a","props":{"href":"https://github.com/avenga/couper/blob/master/grafana.json","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"grafana.json"}]},{"type":"text","value":"\nand import this JSON model to your grafana instance.\nYou may have to set your Datasource to your Prometheus one."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you're missing some configuration options or have feedback: Feel free to open a "},{"type":"element","tag":"a","props":{"href":"https://github.com/avenga/couper/discussions","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"discussion"}]},{"type":"text","value":" or\nan "},{"type":"element","tag":"a","props":{"href":"https://github.com/avenga/couper/issues","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"issue"}]},{"type":"text","value":" if something does not work as expected or shown values does not make any sense."}]},{"type":"element","tag":"h3","props":{"id":"preview"},"children":[{"type":"text","value":"Preview"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"dashboard","src":"/img/grafana.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"developers"},"children":[{"type":"text","value":"Developers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you are interested in contributing to our metrics or refine the grafana dashboard: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"make docker-telemetry"}]},{"type":"text","value":" will spin up the stack for you."}]}]},"_type":"markdown","_id":"content:3.observation:metrics.md","_source":"content","_file":"3.observation/metrics.md","_extension":"md"}]