{"_path":"/configuration/block/oauth2","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"OAuth2","description":"The oauth2 block in the Backend Block context configures an OAuth2 flow to request a bearer token for the backend request.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"oauth2"},"children":[{"type":"text","value":"OAuth2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"oauth2"}]},{"type":"text","value":" block in the "},{"type":"element","tag":"a","props":{"href":"/configuration/block/backend"},"children":[{"type":"text","value":"Backend Block"}]},{"type":"text","value":" context configures an OAuth2 flow to request a bearer token for the backend request."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" The token received from the authorization server's token endpoint is stored "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"per backend"}]},{"type":"text","value":". So even with flows where a user's account characteristics like username/password or email address are involved, there is no way to \"switch\" from one user to another depending on the client request."}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Block name"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Context"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Label"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"oauth2"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"/configuration/block/backend"},"children":[{"type":"text","value":"Backend Block"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"no label"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A nested "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"jwt_signing_profile"}]},{"type":"text","value":" block is used in two cases:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to create a client assertion if "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"token_endpoint_auth_method"}]},{"type":"text","value":" is either "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"\"client_secret_jwt\""}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"\"private_key_jwt\""}]},{"type":"text","value":"; or"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to create an assertion if "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"grant_type"}]},{"type":"text","value":" is "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"\"urn:ietf:params:oauth:grant-type:jwt-bearer\""}]},{"type":"text","value":" and no "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"assertion"}]},{"type":"text","value":" attribute is set."}]}]},{"type":"element","tag":"attributes","props":{":values":"[{\"default\":\"\",\"description\":\"The assertion (JWT for jwt-bearer flow). Required if `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"` and no nested `jwt_signing_profile` block is present.\",\"name\":\"assertion\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"References a [backend](/configuration/block/backend) in [definitions](/configuration/block/definitions) for token requests. Mutually exclusive with `backend` block.\",\"name\":\"backend\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client identifier. Required unless the `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"client_id\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client password. Required unless `token_endpoint_auth_method` is `\\\"private_key_jwt\\\"` or the `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"client_secret\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Required, valid values: `\\\"client_credentials\\\"`, `\\\"password\\\"`, `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`\",\"name\":\"grant_type\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The (service account's) password (for password flow). Required if grant_type is `\\\"password\\\"`.\",\"name\":\"password\",\"type\":\"string\"},{\"default\":\"1\",\"description\":\"The number of retries to get the token and resource, if the resource-request responds with `401 Unauthorized` HTTP status code.\",\"name\":\"retries\",\"type\":\"number\"},{\"default\":\"\",\"description\":\"A space separated list of requested scope values for the access token.\",\"name\":\"scope\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"URL of the token endpoint at the authorization server.\",\"name\":\"token_endpoint\",\"type\":\"string\"},{\"default\":\"\\\"client_secret_basic\\\"\",\"description\":\"Defines the method to authenticate the client at the token endpoint. If set to `\\\"client_secret_post\\\"`, the client credentials are transported in the request body. If set to `\\\"client_secret_basic\\\"`, the client credentials are transported via Basic Authentication. If set to `\\\"client_secret_jwt\\\"`, the client is authenticated via a JWT signed with the `client_secret`. If set to `\\\"private_key_jwt\\\"`, the client is authenticated via a JWT signed with its private key (see `jwt_signing_profile` block).\",\"name\":\"token_endpoint_auth_method\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The (service account's) username (for password flow). Required if grant_type is `\\\"password\\\"`.\",\"name\":\"username\",\"type\":\"string\"}]"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The HTTP header field "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Accept: application/json"}]},{"type":"text","value":" is automatically added to the token request. This can be modified with "},{"type":"element","tag":"a","props":{"href":"/configuration/modifiers#request-header"},"children":[{"type":"text","value":"request header modifiers"}]},{"type":"text","value":" in a "},{"type":"element","tag":"a","props":{"href":"/configuration/block/backend"},"children":[{"type":"text","value":"backend block"}]},{"type":"text","value":"."}]},{"type":"element","tag":"blocks","props":{":values":"[{\"description\":\"Configures a [backend](/configuration/block/backend) for token requests (zero or one). Mutually exclusive with `backend` attribute.\",\"name\":\"backend\"},{\"description\":\"Configures a [JWT signing profile](/configuration/block/jwt_signing_profile) to create a client assertion if `token_endpoint_auth_method` is either `\\\"client_secret_jwt\\\"` or `\\\"private_key_jwt\\\"`, or to create an assertion if `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"` and no `assertion` attribute is set (zero or one).\",\"name\":\"jwt_signing_profile\"}]"},"children":[]}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"oauth2"},"children":[{"type":"text","value":"OAuth2"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"oauth2"}]},{"type":"text","value":" block in the "},{"type":"element","tag":"a","props":{"href":"/configuration/block/backend"},"children":[{"type":"text","value":"Backend Block"}]},{"type":"text","value":" context configures an OAuth2 flow to request a bearer token for the backend request."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"text","value":" The token received from the authorization server's token endpoint is stored "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"per backend"}]},{"type":"text","value":". So even with flows where a user's account characteristics like username/password or email address are involved, there is no way to \"switch\" from one user to another depending on the client request."}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Block name"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Context"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Label"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"oauth2"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"/configuration/block/backend"},"children":[{"type":"text","value":"Backend Block"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"no label"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A nested "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"jwt_signing_profile"}]},{"type":"text","value":" block is used in two cases:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to create a client assertion if "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"token_endpoint_auth_method"}]},{"type":"text","value":" is either "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"\"client_secret_jwt\""}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"\"private_key_jwt\""}]},{"type":"text","value":"; or"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"to create an assertion if "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"grant_type"}]},{"type":"text","value":" is "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"\"urn:ietf:params:oauth:grant-type:jwt-bearer\""}]},{"type":"text","value":" and no "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"assertion"}]},{"type":"text","value":" attribute is set."}]}]},{"type":"element","tag":"attributes","props":{":values":"[{\"default\":\"\",\"description\":\"The assertion (JWT for jwt-bearer flow). Required if `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"` and no nested `jwt_signing_profile` block is present.\",\"name\":\"assertion\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"References a [backend](/configuration/block/backend) in [definitions](/configuration/block/definitions) for token requests. Mutually exclusive with `backend` block.\",\"name\":\"backend\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client identifier. Required unless the `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"client_id\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The client password. Required unless `token_endpoint_auth_method` is `\\\"private_key_jwt\\\"` or the `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`.\",\"name\":\"client_secret\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Required, valid values: `\\\"client_credentials\\\"`, `\\\"password\\\"`, `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"`\",\"name\":\"grant_type\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The (service account's) password (for password flow). Required if grant_type is `\\\"password\\\"`.\",\"name\":\"password\",\"type\":\"string\"},{\"default\":\"1\",\"description\":\"The number of retries to get the token and resource, if the resource-request responds with `401 Unauthorized` HTTP status code.\",\"name\":\"retries\",\"type\":\"number\"},{\"default\":\"\",\"description\":\"A space separated list of requested scope values for the access token.\",\"name\":\"scope\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"URL of the token endpoint at the authorization server.\",\"name\":\"token_endpoint\",\"type\":\"string\"},{\"default\":\"\\\"client_secret_basic\\\"\",\"description\":\"Defines the method to authenticate the client at the token endpoint. If set to `\\\"client_secret_post\\\"`, the client credentials are transported in the request body. If set to `\\\"client_secret_basic\\\"`, the client credentials are transported via Basic Authentication. If set to `\\\"client_secret_jwt\\\"`, the client is authenticated via a JWT signed with the `client_secret`. If set to `\\\"private_key_jwt\\\"`, the client is authenticated via a JWT signed with its private key (see `jwt_signing_profile` block).\",\"name\":\"token_endpoint_auth_method\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"The (service account's) username (for password flow). Required if grant_type is `\\\"password\\\"`.\",\"name\":\"username\",\"type\":\"string\"}]"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The HTTP header field "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Accept: application/json"}]},{"type":"text","value":" is automatically added to the token request. This can be modified with "},{"type":"element","tag":"a","props":{"href":"/configuration/modifiers#request-header"},"children":[{"type":"text","value":"request header modifiers"}]},{"type":"text","value":" in a "},{"type":"element","tag":"a","props":{"href":"/configuration/block/backend"},"children":[{"type":"text","value":"backend block"}]},{"type":"text","value":"."}]},{"type":"element","tag":"blocks","props":{":values":"[{\"description\":\"Configures a [backend](/configuration/block/backend) for token requests (zero or one). Mutually exclusive with `backend` attribute.\",\"name\":\"backend\"},{\"description\":\"Configures a [JWT signing profile](/configuration/block/jwt_signing_profile) to create a client assertion if `token_endpoint_auth_method` is either `\\\"client_secret_jwt\\\"` or `\\\"private_key_jwt\\\"`, or to create an assertion if `grant_type` is `\\\"urn:ietf:params:oauth:grant-type:jwt-bearer\\\"` and no `assertion` attribute is set (zero or one).\",\"name\":\"jwt_signing_profile\"}]"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:2.configuration:4.block:oauth2.md","_source":"content","_file":"2.configuration/4.block/oauth2.md","_extension":"md"}