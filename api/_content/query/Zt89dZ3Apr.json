[{"_path":"/configuration/block/environment","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Environment","description":"The environment block lets you refine the Couper configuration based on the set\nenvironment.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"environment"},"children":[{"type":"text","value":"Environment"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"environment"}]},{"type":"text","value":" block lets you refine the Couper configuration based on the set\n"},{"type":"element","tag":"a","props":{"href":"../command-line#global-options"},"children":[{"type":"text","value":"environment"}]},{"type":"text","value":"."}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Block name"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Context"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Label"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Nested block(s)"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"environment"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Overall."}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"âš  required, multiple labels are supported."}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"All configuration blocks of Couper."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"environment"}]},{"type":"text","value":" block works like a preprocessor. If the label of an "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"environment"}]},{"type":"text","value":"\nblock does not match the set "},{"type":"element","tag":"a","props":{"href":"../command-line#global-options"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"COUPER_ENVIRONMENT"}]}]},{"type":"text","value":" value, the preprocessor\nremoves this block and its content. Otherwise, the content of the block is added\nto the configuration."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Starting Couper with a configuration containing "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"environment"}]},{"type":"text","value":" blocks will fail, if "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"COUPER_ENVIRONMENT"}]},{"type":"text","value":"\nis missing or empty. A default value can be set using the "},{"type":"element","tag":"a","props":{"href":"settings"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"settings"}]},{"type":"text","value":" block"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"example"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Considering the following configuration with the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"COUPER_ENVIRONMENT"}]},{"type":"text","value":" value set to "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"prod"}]}]},{"type":"element","tag":"code","props":{"code":"server {\n  api \"protected\" {\n    endpoint \"/secure\" {\n      environment \"prod\" {\n        access_control = [\"jwt\"]\n      }\n\n      proxy {\n        environment \"prod\" {\n          url = \"https://protected-resource.org\"\n        }\n        environment \"stage\" {\n          url = \"https://test-resource.org\"\n        }\n      }\n    }\n  }\n}\n","language":"hcl"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"server {\n  api \"protected\" {\n    endpoint \"/secure\" {\n      environment \"prod\" {\n        access_control = [\"jwt\"]\n      }\n\n      proxy {\n        environment \"prod\" {\n          url = \"https://protected-resource.org\"\n        }\n        environment \"stage\" {\n          url = \"https://test-resource.org\"\n        }\n      }\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"the result will be:"}]},{"type":"element","tag":"code","props":{"code":"server {\n  api \"protected\" {\n    endpoint \"/secure\" {\n      access_control = [\"jwt\"]\n\n      proxy {\n        url = \"https://protected-resource.org\"\n      }\n    }\n  }\n}\n","language":"hcl"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"server {\n  api \"protected\" {\n    endpoint \"/secure\" {\n      access_control = [\"jwt\"]\n\n      proxy {\n        url = \"https://protected-resource.org\"\n      }\n    }\n  }\n}\n"}]}]}]}]},"_type":"markdown","_id":"content:2.configuration:4.block:environment.md","_source":"content","_file":"2.configuration/4.block/environment.md","_extension":"md"},{"_path":"/configuration/block/files","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Files","description":"The files blocks configure the file serving. Can be defined multiple times as long as the base_path is unique.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"files"},"children":[{"type":"text","value":"Files"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"files"}]},{"type":"text","value":" blocks configure the file serving. Can be defined multiple times as long as the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"base_path"}]},{"type":"text","value":" is unique."}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Block name"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Context"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Label"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Nested block(s)"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"files"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"server"},"children":[{"type":"text","value":"Server Block"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Optional"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"cors"},"children":[{"type":"text","value":"CORS Block"}]}]}]}]}]},{"type":"element","tag":"attributes","props":{":values":"[{\"default\":\"[]\",\"description\":\"Sets predefined access control for this block context.\",\"name\":\"access_control\",\"type\":\"tuple (string)\"},{\"default\":\"\",\"description\":\"key/value pairs to add as response headers in the client response\",\"name\":\"add_response_headers\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"Configures the path prefix for all requests.\",\"name\":\"base_path\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"log fields for [custom logging](/observation/logging#custom-logging). Inherited by nested blocks.\",\"name\":\"custom_log_fields\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"Location of the document root (directory).\",\"name\":\"document_root\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"Location of the error file template.\",\"name\":\"error_file\",\"type\":\"string\"},{\"default\":\"[]\",\"description\":\"list of names to remove headers from the client response\",\"name\":\"remove_response_headers\",\"type\":\"tuple (string)\"},{\"default\":\"\",\"description\":\"key/value pairs to set as response headers in the client response\",\"name\":\"set_response_headers\",\"type\":\"object\"}]"},"children":[]}]},"_type":"markdown","_id":"content:2.configuration:4.block:files.md","_source":"content","_file":"2.configuration/4.block/files.md","_extension":"md"}]