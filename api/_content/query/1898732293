[{"_path":"/configuration/expressions","_draft":false,"_partial":false,"_empty":false,"title":"Expressions","description":"Since we use HCL 2.0 for our configuration, we are able to use attribute values as expression.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"expressions"},"children":[{"type":"text","value":"Expressions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since we use "},{"type":"element","tag":"a","props":{"href":"https://github.com/hashicorp/hcl/tree/hcl2#information-model-and-syntax","rel":["nofollow","noopener","noreferrer"],"target":"_blank"},"children":[{"type":"text","value":"HCL 2.0"}]},{"type":"text","value":" for our configuration, we are able to use attribute values as expression."}]},{"type":"element","tag":"code","props":{"code":"// Arithmetic with literals and application-provided variables\nsum = 1 + addend\n\n// String interpolation and templates\nmessage = \"Hello, ${name}!\"\n\n// Application-provided functions\nshouty_message = upper(message)\n","language":"hcl"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Arithmetic with literals and application-provided variables\nsum = 1 + addend\n\n// String interpolation and templates\nmessage = \"Hello, ${name}!\"\n\n// Application-provided functions\nshouty_message = upper(message)\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See "},{"type":"element","tag":"a","props":{"href":"/configuration/functions"},"children":[{"type":"text","value":"functions"}]},{"type":"text","value":"."}]}]},"_type":"markdown","_id":"content:2.configuration:2.expressions.md","_source":"content","_file":"2.configuration/2.expressions.md","_extension":"md"},{"_path":"/configuration/block/api","_draft":false,"_partial":false,"_empty":false,"title":"API","description":"The api block bundles endpoints under a certain base_path.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"api"},"children":[{"type":"text","value":"API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"api"}]},{"type":"text","value":" block bundles endpoints under a certain "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"base_path"}]},{"type":"text","value":"."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If an error occurred for api endpoints the response gets processed\nas JSON error with an error body payload. This can be customized via "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"error_file"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Block name"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Context"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Label"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Nested block(s)"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"api"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"server"},"children":[{"type":"text","value":"Server Block"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Optional"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"endpoint"},"children":[{"type":"text","value":"Endpoint Block(s)"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"cors"},"children":[{"type":"text","value":"CORS Block"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"error_handler"},"children":[{"type":"text","value":"Error Handler Block(s)"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"attribute-allowed_methods"},"children":[{"type":"text","value":"Attribute "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"allowed_methods"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The default value "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" can be combined with additional methods. Methods are matched case-insensitively. "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Access-Control-Allow-Methods"}]},{"type":"text","value":" is only sent in response to a "},{"type":"element","tag":"a","props":{"href":"cors"},"children":[{"type":"text","value":"CORS"}]},{"type":"text","value":" preflight request, if the method requested by "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Access-Control-Request-Method"}]},{"type":"text","value":" is an allowed method."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":" "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"allowed_methods = [\"GET\", \"POST\"]"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"allowed_methods = [\"*\", \"BREW\"]"}]}]},{"type":"element","tag":"attributes","props":{":values":"[{\"name\":\"access_control\",\"type\":\"tuple (string)\",\"default\":\"[]\",\"description\":\"Sets predefined [Access Control](#access-control) for this block.\"},{\"name\":\"allowed_methods\",\"type\":\"tuple (string)\",\"default\":\"*\",\"description\":\"Sets allowed methods as _default_ for all contained endpoints. Requests with a method that is not allowed result in an error response with a `405 Method Not Allowed` status.\"},{\"name\":\"base_path\",\"type\":\"string\",\"default\":\"\",\"description\":\"Configures the path prefix for all requests.\"},{\"name\":\"beta_required_permission\",\"type\":\"object\",\"default\":\"\",\"description\":\"Permission required to use this API (see [error type](/configuration/error-handling#error-types) `beta_insufficient_permissions`).\"},{\"name\":\"custom_log_fields\",\"type\":\"object\",\"default\":\"\",\"description\":\"Defines log fields for custom Logging\"},{\"name\":\"disable_access_control\",\"type\":\"tuple (string)\",\"default\":\"[]\",\"description\":\"Disables access controls by name.\"},{\"name\":\"error_file\",\"type\":\"string\",\"default\":\"\",\"description\":\"Location of the error file template.\"}]"},"children":[]}]},"_type":"markdown","_id":"content:2.configuration:4.block:api.md","_source":"content","_file":"2.configuration/4.block/api.md","_extension":"md"}]