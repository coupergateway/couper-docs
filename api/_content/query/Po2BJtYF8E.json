[{"_path":"/configuration/block/error_handler","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Error Handler","description":"The error_handler block lets you configure the handling of errors thrown in components configured by the parent blocks.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"error-handler"},"children":[{"type":"text","value":"Error Handler"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"error_handler"}]},{"type":"text","value":" block lets you configure the handling of errors thrown in components configured by the parent blocks."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The error handler label specifies which "},{"type":"element","tag":"a","props":{"href":"/configuration/error-handling#error-types"},"children":[{"type":"text","value":"error type"}]},{"type":"text","value":" should be handled. Multiple labels are allowed. The label can be omitted to catch all relevant errors. This has the same behavior as the error type "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"*"}]},{"type":"text","value":", that catches all errors explicitly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Concerning child blocks and attributes, the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"error_handler"}]},{"type":"text","value":" block is similar to an "},{"type":"element","tag":"a","props":{"href":"/configuration/block/endpoint"},"children":[{"type":"text","value":"Endpoint Block"}]},{"type":"text","value":"."}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Block name"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Context"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Label"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"error_handler"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"/configuration/block/api"},"children":[{"type":"text","value":"API Block"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"/configuration/block/endpoint"},"children":[{"type":"text","value":"Endpoint Block"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"/configuration/block/basic_auth"},"children":[{"type":"text","value":"Basic Auth Block"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"/configuration/block/jwt"},"children":[{"type":"text","value":"JWT Block"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"/configuration/block/beta_oauth2"},"children":[{"type":"text","value":"OAuth2 AC (Beta) Block"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"/configuration/block/oidc"},"children":[{"type":"text","value":"OIDC Block"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"/configuration/block/saml"},"children":[{"type":"text","value":"SAML Block"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"optional"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"example"},"children":[{"type":"text","value":"Example"}]},{"type":"element","tag":"code","props":{"code":"basic_auth \"ba\" {\n  # ...\n  error_handler \"basic_auth_credentials_missing\" {\n    response {\n      status = 403\n      json_body = {\n        error = \"forbidden\"\n      }\n    }\n  }\n}\n","language":"hcl"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"basic_auth \"ba\" {\n  # ...\n  error_handler \"basic_auth_credentials_missing\" {\n    response {\n      status = 403\n      json_body = {\n        error = \"forbidden\"\n      }\n    }\n  }\n}\n"}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/avenga/couper-examples/blob/master/error-handling-ba/README.md","rel":["nofollow"]},"children":[{"type":"text","value":"Error Handling for Access Controls"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"attributes","props":{":values":"[{\"default\":\"\",\"description\":\"key/value pairs to add form parameters to the upstream request body\",\"name\":\"add_form_params\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"key/value pairs to add query parameters to the upstream request URL\",\"name\":\"add_query_params\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"key/value pairs to add as request headers in the upstream request\",\"name\":\"add_request_headers\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"key/value pairs to add as response headers in the client response\",\"name\":\"add_response_headers\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"log fields for [custom logging](/observation/logging#custom-logging). Inherited by nested blocks.\",\"name\":\"custom_log_fields\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"Location of the error file template.\",\"name\":\"error_file\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"list of names to remove form parameters from the upstream request body\",\"name\":\"remove_form_params\",\"type\":\"object\"},{\"default\":\"[]\",\"description\":\"list of names to remove query parameters from the upstream request URL\",\"name\":\"remove_query_params\",\"type\":\"tuple (string)\"},{\"default\":\"[]\",\"description\":\"list of names to remove headers from the upstream request\",\"name\":\"remove_request_headers\",\"type\":\"tuple (string)\"},{\"default\":\"[]\",\"description\":\"list of names to remove headers from the client response\",\"name\":\"remove_response_headers\",\"type\":\"tuple (string)\"},{\"default\":\"\",\"description\":\"key/value pairs to set query parameters in the upstream request URL\",\"name\":\"set_form_params\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"key/value pairs to set query parameters in the upstream request URL\",\"name\":\"set_query_params\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"key/value pairs to set as request headers in the upstream request\",\"name\":\"set_request_headers\",\"type\":\"object\"},{\"default\":\"\",\"description\":\"key/value pairs to set as response headers in the client response\",\"name\":\"set_response_headers\",\"type\":\"object\"}]"},"children":[]},{"type":"element","tag":"blocks","props":{":values":"[{\"description\":\"Configures a [proxy](/configuration/block/proxy) (zero or more).\",\"name\":\"proxy\"},{\"description\":\"Configures a [request](/configuration/block/request) (zero or more).\",\"name\":\"request\"},{\"description\":\"Configures the [response](/configuration/block/response) (zero or one).\",\"name\":\"response\"}]"},"children":[]}]},"_type":"markdown","_id":"content:2.configuration:4.block:error_handler.md","_source":"content","_file":"2.configuration/4.block/error_handler.md","_extension":"md"},{"_path":"/configuration/block/health","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Health","description":"Defines a recurring health check request for its backend. Results can be obtained via the backends.<label>.health variables.\nChanges in health states and related requests will be logged. Default User-Agent will be Couper / <version> health-check if not provided\nvia headers attribute. An unhealthy backend will return with a backend_unhealthy error.","excerpt":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"health"},"children":[{"type":"text","value":"Health"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Defines a recurring health check request for its backend. Results can be obtained via the "},{"type":"element","tag":"a","props":{"href":"/configuration/variables#backends"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"backends.<label>.health"}]},{"type":"text","value":" variables"}]},{"type":"text","value":".\nChanges in health states and related requests will be logged. Default User-Agent will be "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Couper / <version> health-check"}]},{"type":"text","value":" if not provided\nvia "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"headers"}]},{"type":"text","value":" attribute. An unhealthy backend will return with a "},{"type":"element","tag":"a","props":{"href":"/configuration/error-handling#api-error-types"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"backend_unhealthy"}]}]},{"type":"text","value":" error."}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Block name"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Context"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Label"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"beta_health"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"element","tag":"a","props":{"href":"/configuration/block/backend"},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"backend"}]},{"type":"text","value":" block"}]}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"no label"}]}]}]}]},{"type":"element","tag":"attributes","props":{":values":"[{\"default\":\"[200, 204, 301]\",\"description\":\"one of wanted response status codes\",\"name\":\"expected_status\",\"type\":\"tuple (int)\"},{\"default\":\"\",\"description\":\"text which the response body must contain\",\"name\":\"expected_text\",\"type\":\"string\"},{\"default\":\"2\",\"description\":\"failed checks needed to consider backend unhealthy\",\"name\":\"failure_threshold\",\"type\":\"number\"},{\"default\":\"\",\"description\":\"request headers\",\"name\":\"headers\",\"type\":\"object\"},{\"default\":\"\\\"1s\\\"\",\"description\":\"time interval for recheck\",\"name\":\"interval\",\"type\":\"string\"},{\"default\":\"\",\"description\":\"URL path with query on backend host\",\"name\":\"path\",\"type\":\"string\"},{\"default\":\"\\\"1s\\\"\",\"description\":\"maximum allowed time limit which is\\tbounded by `interval`\",\"name\":\"timeout\",\"type\":\"string\"}]"},"children":[]}]},"_type":"markdown","_id":"content:2.configuration:4.block:health.md","_source":"content","_file":"2.configuration/4.block/health.md","_extension":"md"}]